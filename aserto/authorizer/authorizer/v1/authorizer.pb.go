// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: aserto/authorizer/authorizer/v1/authorizer.proto

package authorizer

import (
	v1 "github.com/aserto-dev/go-grpc/aserto/api/v1"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PathSeparator int32

const (
	PathSeparator_PATH_SEPARATOR_UNKNOWN PathSeparator = 0 // Value not set.
	PathSeparator_PATH_SEPARATOR_DOT     PathSeparator = 1 // Dot "." path separator
	PathSeparator_PATH_SEPARATOR_SLASH   PathSeparator = 2 // Slash "/" path separtor
)

// Enum value maps for PathSeparator.
var (
	PathSeparator_name = map[int32]string{
		0: "PATH_SEPARATOR_UNKNOWN",
		1: "PATH_SEPARATOR_DOT",
		2: "PATH_SEPARATOR_SLASH",
	}
	PathSeparator_value = map[string]int32{
		"PATH_SEPARATOR_UNKNOWN": 0,
		"PATH_SEPARATOR_DOT":     1,
		"PATH_SEPARATOR_SLASH":   2,
	}
)

func (x PathSeparator) Enum() *PathSeparator {
	p := new(PathSeparator)
	*p = x
	return p
}

func (x PathSeparator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PathSeparator) Descriptor() protoreflect.EnumDescriptor {
	return file_aserto_authorizer_authorizer_v1_authorizer_proto_enumTypes[0].Descriptor()
}

func (PathSeparator) Type() protoreflect.EnumType {
	return &file_aserto_authorizer_authorizer_v1_authorizer_proto_enumTypes[0]
}

func (x PathSeparator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PathSeparator.Descriptor instead.
func (PathSeparator) EnumDescriptor() ([]byte, []int) {
	return file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDescGZIP(), []int{0}
}

type TraceLevel int32

const (
	TraceLevel_TRACE_LEVEL_UNKNOWN TraceLevel = 0 // Value not set.
	TraceLevel_TRACE_LEVEL_OFF     TraceLevel = 1 // ExplainOffV1   ExplainModeV1 = "off"
	TraceLevel_TRACE_LEVEL_FULL    TraceLevel = 2 // ExplainFullV1  ExplainModeV1 = "full"
	TraceLevel_TRACE_LEVEL_NOTES   TraceLevel = 3 // ExplainNotesV1 ExplainModeV1 = "notes"
	TraceLevel_TRACE_LEVEL_FAILS   TraceLevel = 4 // ExplainFailsV1 ExplainModeV1 = "fails"
)

// Enum value maps for TraceLevel.
var (
	TraceLevel_name = map[int32]string{
		0: "TRACE_LEVEL_UNKNOWN",
		1: "TRACE_LEVEL_OFF",
		2: "TRACE_LEVEL_FULL",
		3: "TRACE_LEVEL_NOTES",
		4: "TRACE_LEVEL_FAILS",
	}
	TraceLevel_value = map[string]int32{
		"TRACE_LEVEL_UNKNOWN": 0,
		"TRACE_LEVEL_OFF":     1,
		"TRACE_LEVEL_FULL":    2,
		"TRACE_LEVEL_NOTES":   3,
		"TRACE_LEVEL_FAILS":   4,
	}
)

func (x TraceLevel) Enum() *TraceLevel {
	p := new(TraceLevel)
	*p = x
	return p
}

func (x TraceLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TraceLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_aserto_authorizer_authorizer_v1_authorizer_proto_enumTypes[1].Descriptor()
}

func (TraceLevel) Type() protoreflect.EnumType {
	return &file_aserto_authorizer_authorizer_v1_authorizer_proto_enumTypes[1]
}

func (x TraceLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TraceLevel.Descriptor instead.
func (TraceLevel) EnumDescriptor() ([]byte, []int) {
	return file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDescGZIP(), []int{1}
}

type DecisionTreeRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PolicyContext   *v1.PolicyContext      `protobuf:"bytes,1,opt,name=policy_context,json=policyContext,proto3" json:"policy_context,omitempty"`
	IdentityContext *v1.IdentityContext    `protobuf:"bytes,2,opt,name=identity_context,json=identityContext,proto3" json:"identity_context,omitempty"`
	Options         *DecisionTreeOptions   `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	ResourceContext *structpb.Struct       `protobuf:"bytes,4,opt,name=resource_context,json=resourceContext,proto3" json:"resource_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DecisionTreeRequest) Reset() {
	*x = DecisionTreeRequest{}
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecisionTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionTreeRequest) ProtoMessage() {}

func (x *DecisionTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionTreeRequest.ProtoReflect.Descriptor instead.
func (*DecisionTreeRequest) Descriptor() ([]byte, []int) {
	return file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDescGZIP(), []int{0}
}

func (x *DecisionTreeRequest) GetPolicyContext() *v1.PolicyContext {
	if x != nil {
		return x.PolicyContext
	}
	return nil
}

func (x *DecisionTreeRequest) GetIdentityContext() *v1.IdentityContext {
	if x != nil {
		return x.IdentityContext
	}
	return nil
}

func (x *DecisionTreeRequest) GetOptions() *DecisionTreeOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *DecisionTreeRequest) GetResourceContext() *structpb.Struct {
	if x != nil {
		return x.ResourceContext
	}
	return nil
}

type DecisionTreeOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PathSeparator PathSeparator          `protobuf:"varint,1,opt,name=path_separator,json=pathSeparator,proto3,enum=aserto.authorizer.authorizer.v1.PathSeparator" json:"path_separator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecisionTreeOptions) Reset() {
	*x = DecisionTreeOptions{}
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecisionTreeOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionTreeOptions) ProtoMessage() {}

func (x *DecisionTreeOptions) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionTreeOptions.ProtoReflect.Descriptor instead.
func (*DecisionTreeOptions) Descriptor() ([]byte, []int) {
	return file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDescGZIP(), []int{1}
}

func (x *DecisionTreeOptions) GetPathSeparator() PathSeparator {
	if x != nil {
		return x.PathSeparator
	}
	return PathSeparator_PATH_SEPARATOR_UNKNOWN
}

type DecisionTreeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PathRoot      string                 `protobuf:"bytes,1,opt,name=path_root,json=pathRoot,proto3" json:"path_root,omitempty"`
	Path          *structpb.Struct       `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecisionTreeResponse) Reset() {
	*x = DecisionTreeResponse{}
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecisionTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionTreeResponse) ProtoMessage() {}

func (x *DecisionTreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionTreeResponse.ProtoReflect.Descriptor instead.
func (*DecisionTreeResponse) Descriptor() ([]byte, []int) {
	return file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDescGZIP(), []int{2}
}

func (x *DecisionTreeResponse) GetPathRoot() string {
	if x != nil {
		return x.PathRoot
	}
	return ""
}

func (x *DecisionTreeResponse) GetPath() *structpb.Struct {
	if x != nil {
		return x.Path
	}
	return nil
}

type IsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PolicyContext   *v1.PolicyContext      `protobuf:"bytes,1,opt,name=policy_context,json=policyContext,proto3" json:"policy_context,omitempty"`
	IdentityContext *v1.IdentityContext    `protobuf:"bytes,2,opt,name=identity_context,json=identityContext,proto3" json:"identity_context,omitempty"`
	ResourceContext *structpb.Struct       `protobuf:"bytes,3,opt,name=resource_context,json=resourceContext,proto3" json:"resource_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *IsRequest) Reset() {
	*x = IsRequest{}
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsRequest) ProtoMessage() {}

func (x *IsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsRequest.ProtoReflect.Descriptor instead.
func (*IsRequest) Descriptor() ([]byte, []int) {
	return file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDescGZIP(), []int{3}
}

func (x *IsRequest) GetPolicyContext() *v1.PolicyContext {
	if x != nil {
		return x.PolicyContext
	}
	return nil
}

func (x *IsRequest) GetIdentityContext() *v1.IdentityContext {
	if x != nil {
		return x.IdentityContext
	}
	return nil
}

func (x *IsRequest) GetResourceContext() *structpb.Struct {
	if x != nil {
		return x.ResourceContext
	}
	return nil
}

type Decision struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Decision      string                 `protobuf:"bytes,1,opt,name=decision,proto3" json:"decision,omitempty"`
	Is            bool                   `protobuf:"varint,2,opt,name=is,proto3" json:"is,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Decision) Reset() {
	*x = Decision{}
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Decision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Decision) ProtoMessage() {}

func (x *Decision) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Decision.ProtoReflect.Descriptor instead.
func (*Decision) Descriptor() ([]byte, []int) {
	return file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDescGZIP(), []int{4}
}

func (x *Decision) GetDecision() string {
	if x != nil {
		return x.Decision
	}
	return ""
}

func (x *Decision) GetIs() bool {
	if x != nil {
		return x.Is
	}
	return false
}

type IsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Decisions     []*Decision            `protobuf:"bytes,1,rep,name=decisions,proto3" json:"decisions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsResponse) Reset() {
	*x = IsResponse{}
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsResponse) ProtoMessage() {}

func (x *IsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsResponse.ProtoReflect.Descriptor instead.
func (*IsResponse) Descriptor() ([]byte, []int) {
	return file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDescGZIP(), []int{5}
}

func (x *IsResponse) GetDecisions() []*Decision {
	if x != nil {
		return x.Decisions
	}
	return nil
}

type QueryOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metrics       bool                   `protobuf:"varint,1,opt,name=metrics,proto3" json:"metrics,omitempty"`                                             // default false
	Instrument    bool                   `protobuf:"varint,2,opt,name=instrument,proto3" json:"instrument,omitempty"`                                       // default false
	Trace         TraceLevel             `protobuf:"varint,3,opt,name=trace,proto3,enum=aserto.authorizer.authorizer.v1.TraceLevel" json:"trace,omitempty"` // default ExplainOffV1
	TraceSummary  bool                   `protobuf:"varint,4,opt,name=trace_summary,json=traceSummary,proto3" json:"trace_summary,omitempty"`               // default false
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryOptions) Reset() {
	*x = QueryOptions{}
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOptions) ProtoMessage() {}

func (x *QueryOptions) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOptions.ProtoReflect.Descriptor instead.
func (*QueryOptions) Descriptor() ([]byte, []int) {
	return file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDescGZIP(), []int{6}
}

func (x *QueryOptions) GetMetrics() bool {
	if x != nil {
		return x.Metrics
	}
	return false
}

func (x *QueryOptions) GetInstrument() bool {
	if x != nil {
		return x.Instrument
	}
	return false
}

func (x *QueryOptions) GetTrace() TraceLevel {
	if x != nil {
		return x.Trace
	}
	return TraceLevel_TRACE_LEVEL_UNKNOWN
}

func (x *QueryOptions) GetTraceSummary() bool {
	if x != nil {
		return x.TraceSummary
	}
	return false
}

type QueryRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	IdentityContext *v1.IdentityContext    `protobuf:"bytes,1,opt,name=identity_context,json=identityContext,proto3" json:"identity_context,omitempty"`
	Query           string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Input           string                 `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
	Options         *QueryOptions          `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	PolicyContext   *v1.PolicyContext      `protobuf:"bytes,5,opt,name=policy_context,json=policyContext,proto3" json:"policy_context,omitempty"`
	ResourceContext *structpb.Struct       `protobuf:"bytes,6,opt,name=resource_context,json=resourceContext,proto3" json:"resource_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDescGZIP(), []int{7}
}

func (x *QueryRequest) GetIdentityContext() *v1.IdentityContext {
	if x != nil {
		return x.IdentityContext
	}
	return nil
}

func (x *QueryRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *QueryRequest) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *QueryRequest) GetOptions() *QueryOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *QueryRequest) GetPolicyContext() *v1.PolicyContext {
	if x != nil {
		return x.PolicyContext
	}
	return nil
}

func (x *QueryRequest) GetResourceContext() *structpb.Struct {
	if x != nil {
		return x.ResourceContext
	}
	return nil
}

type QueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*structpb.Struct     `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Metrics       *structpb.Struct       `protobuf:"bytes,2,opt,name=metrics,proto3" json:"metrics,omitempty"`
	Trace         []*structpb.Struct     `protobuf:"bytes,3,rep,name=trace,proto3" json:"trace,omitempty"`
	TraceSummary  []string               `protobuf:"bytes,4,rep,name=trace_summary,json=traceSummary,proto3" json:"trace_summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDescGZIP(), []int{8}
}

func (x *QueryResponse) GetResults() []*structpb.Struct {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *QueryResponse) GetMetrics() *structpb.Struct {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *QueryResponse) GetTrace() []*structpb.Struct {
	if x != nil {
		return x.Trace
	}
	return nil
}

func (x *QueryResponse) GetTraceSummary() []string {
	if x != nil {
		return x.TraceSummary
	}
	return nil
}

var File_aserto_authorizer_authorizer_v1_authorizer_proto protoreflect.FileDescriptor

const file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDesc = "" +
	"\n" +
	"0aserto/authorizer/authorizer/v1/authorizer.proto\x12\x1faserto.authorizer.authorizer.v1\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\"aserto/api/v1/policy_context.proto\x1a$aserto/api/v1/identity_context.proto\"\xb9\x02\n" +
	"\x13DecisionTreeRequest\x12C\n" +
	"\x0epolicy_context\x18\x01 \x01(\v2\x1c.aserto.api.v1.PolicyContextR\rpolicyContext\x12I\n" +
	"\x10identity_context\x18\x02 \x01(\v2\x1e.aserto.api.v1.IdentityContextR\x0fidentityContext\x12N\n" +
	"\aoptions\x18\x03 \x01(\v24.aserto.authorizer.authorizer.v1.DecisionTreeOptionsR\aoptions\x12B\n" +
	"\x10resource_context\x18\x04 \x01(\v2\x17.google.protobuf.StructR\x0fresourceContext\"r\n" +
	"\x13DecisionTreeOptions\x12U\n" +
	"\x0epath_separator\x18\x01 \x01(\x0e2..aserto.authorizer.authorizer.v1.PathSeparatorR\rpathSeparatorJ\x04\b\x02\x10\x03\"f\n" +
	"\x14DecisionTreeResponse\x12\x1b\n" +
	"\tpath_root\x18\x01 \x01(\tR\bpathRoot\x12+\n" +
	"\x04path\x18\x03 \x01(\v2\x17.google.protobuf.StructR\x04pathJ\x04\b\x02\x10\x03\"\xdf\x01\n" +
	"\tIsRequest\x12C\n" +
	"\x0epolicy_context\x18\x01 \x01(\v2\x1c.aserto.api.v1.PolicyContextR\rpolicyContext\x12I\n" +
	"\x10identity_context\x18\x02 \x01(\v2\x1e.aserto.api.v1.IdentityContextR\x0fidentityContext\x12B\n" +
	"\x10resource_context\x18\x03 \x01(\v2\x17.google.protobuf.StructR\x0fresourceContext\"6\n" +
	"\bDecision\x12\x1a\n" +
	"\bdecision\x18\x01 \x01(\tR\bdecision\x12\x0e\n" +
	"\x02is\x18\x02 \x01(\bR\x02is\"U\n" +
	"\n" +
	"IsResponse\x12G\n" +
	"\tdecisions\x18\x01 \x03(\v2).aserto.authorizer.authorizer.v1.DecisionR\tdecisions\"\xb0\x01\n" +
	"\fQueryOptions\x12\x18\n" +
	"\ametrics\x18\x01 \x01(\bR\ametrics\x12\x1e\n" +
	"\n" +
	"instrument\x18\x02 \x01(\bR\n" +
	"instrument\x12A\n" +
	"\x05trace\x18\x03 \x01(\x0e2+.aserto.authorizer.authorizer.v1.TraceLevelR\x05trace\x12#\n" +
	"\rtrace_summary\x18\x04 \x01(\bR\ftraceSummary\"\xd7\x02\n" +
	"\fQueryRequest\x12I\n" +
	"\x10identity_context\x18\x01 \x01(\v2\x1e.aserto.api.v1.IdentityContextR\x0fidentityContext\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\x12\x14\n" +
	"\x05input\x18\x03 \x01(\tR\x05input\x12G\n" +
	"\aoptions\x18\x04 \x01(\v2-.aserto.authorizer.authorizer.v1.QueryOptionsR\aoptions\x12C\n" +
	"\x0epolicy_context\x18\x05 \x01(\v2\x1c.aserto.api.v1.PolicyContextR\rpolicyContext\x12B\n" +
	"\x10resource_context\x18\x06 \x01(\v2\x17.google.protobuf.StructR\x0fresourceContext\"\xc9\x01\n" +
	"\rQueryResponse\x121\n" +
	"\aresults\x18\x01 \x03(\v2\x17.google.protobuf.StructR\aresults\x121\n" +
	"\ametrics\x18\x02 \x01(\v2\x17.google.protobuf.StructR\ametrics\x12-\n" +
	"\x05trace\x18\x03 \x03(\v2\x17.google.protobuf.StructR\x05trace\x12#\n" +
	"\rtrace_summary\x18\x04 \x03(\tR\ftraceSummary*]\n" +
	"\rPathSeparator\x12\x1a\n" +
	"\x16PATH_SEPARATOR_UNKNOWN\x10\x00\x12\x16\n" +
	"\x12PATH_SEPARATOR_DOT\x10\x01\x12\x18\n" +
	"\x14PATH_SEPARATOR_SLASH\x10\x02*~\n" +
	"\n" +
	"TraceLevel\x12\x17\n" +
	"\x13TRACE_LEVEL_UNKNOWN\x10\x00\x12\x13\n" +
	"\x0fTRACE_LEVEL_OFF\x10\x01\x12\x14\n" +
	"\x10TRACE_LEVEL_FULL\x10\x02\x12\x15\n" +
	"\x11TRACE_LEVEL_NOTES\x10\x03\x12\x15\n" +
	"\x11TRACE_LEVEL_FAILS\x10\x042\xe1\x06\n" +
	"\n" +
	"Authorizer\x12\xb5\x02\n" +
	"\fDecisionTree\x124.aserto.authorizer.authorizer.v1.DecisionTreeRequest\x1a5.aserto.authorizer.authorizer.v1.DecisionTreeResponse\"\xb7\x01\x92A\x8e\x01\n" +
	"\n" +
	"authorizer\x12\rDecision tree\x1a1Returns decision tree for given identity context.*\x18authorizer.decision_treeb$\n" +
	"\x14\n" +
	"\x10AuthorizerAPIKey\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/api/v1/authz/decisiontree\x12\xb3\x02\n" +
	"\x02Is\x12*.aserto.authorizer.authorizer.v1.IsRequest\x1a+.aserto.authorizer.authorizer.v1.IsResponse\"\xd3\x01\x92A\xb4\x01\n" +
	"\n" +
	"authorizer\x12\x0fIs (authorized)\x1a`Determines if identity context is authorized to access the resource guarded by the given policy.*\rauthorizer.isb$\n" +
	"\x14\n" +
	"\x10AuthorizerAPIKey\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/api/v1/authz/is\x12\xe4\x01\n" +
	"\x05Query\x12-.aserto.authorizer.authorizer.v1.QueryRequest\x1a..aserto.authorizer.authorizer.v1.QueryResponse\"|\x92A[\n" +
	"\n" +
	"authorizer\x12\x05Query\x1a\x0eExecute query.*\x10authorizer.queryb$\n" +
	"\x14\n" +
	"\x10AuthorizerAPIKey\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/api/v1/authz/queryB\x92\x02\x92A\x9c\x01*\x01\x022\x10application/json:\x10application/jsonZM\n" +
	"'\n" +
	"\x10AuthorizerAPIKey\x12\x13\b\x02\x1a\rauthorization \x02\n" +
	"\"\n" +
	"\bTenantID\x12\x16\b\x02\x1a\x10aserto-tenant-id \x02b$\n" +
	"\x14\n" +
	"\x10AuthorizerAPIKey\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00ZNgithub.com/aserto-dev/go-grpc-authz/aserto/authorizer/authorizer/v1;authorizer\xaa\x02\x1fAserto.Authorizer.Authorizer.V1b\x06proto3"

var (
	file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDescOnce sync.Once
	file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDescData []byte
)

func file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDescGZIP() []byte {
	file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDescOnce.Do(func() {
		file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDesc), len(file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDesc)))
	})
	return file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDescData
}

var file_aserto_authorizer_authorizer_v1_authorizer_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_aserto_authorizer_authorizer_v1_authorizer_proto_goTypes = []any{
	(PathSeparator)(0),           // 0: aserto.authorizer.authorizer.v1.PathSeparator
	(TraceLevel)(0),              // 1: aserto.authorizer.authorizer.v1.TraceLevel
	(*DecisionTreeRequest)(nil),  // 2: aserto.authorizer.authorizer.v1.DecisionTreeRequest
	(*DecisionTreeOptions)(nil),  // 3: aserto.authorizer.authorizer.v1.DecisionTreeOptions
	(*DecisionTreeResponse)(nil), // 4: aserto.authorizer.authorizer.v1.DecisionTreeResponse
	(*IsRequest)(nil),            // 5: aserto.authorizer.authorizer.v1.IsRequest
	(*Decision)(nil),             // 6: aserto.authorizer.authorizer.v1.Decision
	(*IsResponse)(nil),           // 7: aserto.authorizer.authorizer.v1.IsResponse
	(*QueryOptions)(nil),         // 8: aserto.authorizer.authorizer.v1.QueryOptions
	(*QueryRequest)(nil),         // 9: aserto.authorizer.authorizer.v1.QueryRequest
	(*QueryResponse)(nil),        // 10: aserto.authorizer.authorizer.v1.QueryResponse
	(*v1.PolicyContext)(nil),     // 11: aserto.api.v1.PolicyContext
	(*v1.IdentityContext)(nil),   // 12: aserto.api.v1.IdentityContext
	(*structpb.Struct)(nil),      // 13: google.protobuf.Struct
}
var file_aserto_authorizer_authorizer_v1_authorizer_proto_depIdxs = []int32{
	11, // 0: aserto.authorizer.authorizer.v1.DecisionTreeRequest.policy_context:type_name -> aserto.api.v1.PolicyContext
	12, // 1: aserto.authorizer.authorizer.v1.DecisionTreeRequest.identity_context:type_name -> aserto.api.v1.IdentityContext
	3,  // 2: aserto.authorizer.authorizer.v1.DecisionTreeRequest.options:type_name -> aserto.authorizer.authorizer.v1.DecisionTreeOptions
	13, // 3: aserto.authorizer.authorizer.v1.DecisionTreeRequest.resource_context:type_name -> google.protobuf.Struct
	0,  // 4: aserto.authorizer.authorizer.v1.DecisionTreeOptions.path_separator:type_name -> aserto.authorizer.authorizer.v1.PathSeparator
	13, // 5: aserto.authorizer.authorizer.v1.DecisionTreeResponse.path:type_name -> google.protobuf.Struct
	11, // 6: aserto.authorizer.authorizer.v1.IsRequest.policy_context:type_name -> aserto.api.v1.PolicyContext
	12, // 7: aserto.authorizer.authorizer.v1.IsRequest.identity_context:type_name -> aserto.api.v1.IdentityContext
	13, // 8: aserto.authorizer.authorizer.v1.IsRequest.resource_context:type_name -> google.protobuf.Struct
	6,  // 9: aserto.authorizer.authorizer.v1.IsResponse.decisions:type_name -> aserto.authorizer.authorizer.v1.Decision
	1,  // 10: aserto.authorizer.authorizer.v1.QueryOptions.trace:type_name -> aserto.authorizer.authorizer.v1.TraceLevel
	12, // 11: aserto.authorizer.authorizer.v1.QueryRequest.identity_context:type_name -> aserto.api.v1.IdentityContext
	8,  // 12: aserto.authorizer.authorizer.v1.QueryRequest.options:type_name -> aserto.authorizer.authorizer.v1.QueryOptions
	11, // 13: aserto.authorizer.authorizer.v1.QueryRequest.policy_context:type_name -> aserto.api.v1.PolicyContext
	13, // 14: aserto.authorizer.authorizer.v1.QueryRequest.resource_context:type_name -> google.protobuf.Struct
	13, // 15: aserto.authorizer.authorizer.v1.QueryResponse.results:type_name -> google.protobuf.Struct
	13, // 16: aserto.authorizer.authorizer.v1.QueryResponse.metrics:type_name -> google.protobuf.Struct
	13, // 17: aserto.authorizer.authorizer.v1.QueryResponse.trace:type_name -> google.protobuf.Struct
	2,  // 18: aserto.authorizer.authorizer.v1.Authorizer.DecisionTree:input_type -> aserto.authorizer.authorizer.v1.DecisionTreeRequest
	5,  // 19: aserto.authorizer.authorizer.v1.Authorizer.Is:input_type -> aserto.authorizer.authorizer.v1.IsRequest
	9,  // 20: aserto.authorizer.authorizer.v1.Authorizer.Query:input_type -> aserto.authorizer.authorizer.v1.QueryRequest
	4,  // 21: aserto.authorizer.authorizer.v1.Authorizer.DecisionTree:output_type -> aserto.authorizer.authorizer.v1.DecisionTreeResponse
	7,  // 22: aserto.authorizer.authorizer.v1.Authorizer.Is:output_type -> aserto.authorizer.authorizer.v1.IsResponse
	10, // 23: aserto.authorizer.authorizer.v1.Authorizer.Query:output_type -> aserto.authorizer.authorizer.v1.QueryResponse
	21, // [21:24] is the sub-list for method output_type
	18, // [18:21] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_aserto_authorizer_authorizer_v1_authorizer_proto_init() }
func file_aserto_authorizer_authorizer_v1_authorizer_proto_init() {
	if File_aserto_authorizer_authorizer_v1_authorizer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDesc), len(file_aserto_authorizer_authorizer_v1_authorizer_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aserto_authorizer_authorizer_v1_authorizer_proto_goTypes,
		DependencyIndexes: file_aserto_authorizer_authorizer_v1_authorizer_proto_depIdxs,
		EnumInfos:         file_aserto_authorizer_authorizer_v1_authorizer_proto_enumTypes,
		MessageInfos:      file_aserto_authorizer_authorizer_v1_authorizer_proto_msgTypes,
	}.Build()
	File_aserto_authorizer_authorizer_v1_authorizer_proto = out.File
	file_aserto_authorizer_authorizer_v1_authorizer_proto_goTypes = nil
	file_aserto_authorizer_authorizer_v1_authorizer_proto_depIdxs = nil
}
