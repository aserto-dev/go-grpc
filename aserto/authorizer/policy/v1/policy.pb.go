// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: aserto/authorizer/policy/v1/policy.proto

package policy

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListPoliciesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPoliciesRequest) Reset() {
	*x = ListPoliciesRequest{}
	mi := &file_aserto_authorizer_policy_v1_policy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoliciesRequest) ProtoMessage() {}

func (x *ListPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_authorizer_policy_v1_policy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoliciesRequest.ProtoReflect.Descriptor instead.
func (*ListPoliciesRequest) Descriptor() ([]byte, []int) {
	return file_aserto_authorizer_policy_v1_policy_proto_rawDescGZIP(), []int{0}
}

type ListPoliciesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*PolicyItem          `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPoliciesResponse) Reset() {
	*x = ListPoliciesResponse{}
	mi := &file_aserto_authorizer_policy_v1_policy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoliciesResponse) ProtoMessage() {}

func (x *ListPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_authorizer_policy_v1_policy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoliciesResponse.ProtoReflect.Descriptor instead.
func (*ListPoliciesResponse) Descriptor() ([]byte, []int) {
	return file_aserto_authorizer_policy_v1_policy_proto_rawDescGZIP(), []int{1}
}

func (x *ListPoliciesResponse) GetResults() []*PolicyItem {
	if x != nil {
		return x.Results
	}
	return nil
}

type GetPoliciesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	InstanceLabel string                 `protobuf:"bytes,3,opt,name=instance_label,json=instanceLabel,proto3" json:"instance_label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPoliciesRequest) Reset() {
	*x = GetPoliciesRequest{}
	mi := &file_aserto_authorizer_policy_v1_policy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoliciesRequest) ProtoMessage() {}

func (x *GetPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_authorizer_policy_v1_policy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoliciesRequest.ProtoReflect.Descriptor instead.
func (*GetPoliciesRequest) Descriptor() ([]byte, []int) {
	return file_aserto_authorizer_policy_v1_policy_proto_rawDescGZIP(), []int{2}
}

func (x *GetPoliciesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetPoliciesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPoliciesRequest) GetInstanceLabel() string {
	if x != nil {
		return x.InstanceLabel
	}
	return ""
}

type GetPoliciesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Policies      []*PolicyItem          `protobuf:"bytes,3,rep,name=policies,proto3" json:"policies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPoliciesResponse) Reset() {
	*x = GetPoliciesResponse{}
	mi := &file_aserto_authorizer_policy_v1_policy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPoliciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoliciesResponse) ProtoMessage() {}

func (x *GetPoliciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_authorizer_policy_v1_policy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoliciesResponse.ProtoReflect.Descriptor instead.
func (*GetPoliciesResponse) Descriptor() ([]byte, []int) {
	return file_aserto_authorizer_policy_v1_policy_proto_rawDescGZIP(), []int{3}
}

func (x *GetPoliciesResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetPoliciesResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPoliciesResponse) GetPolicies() []*PolicyItem {
	if x != nil {
		return x.Policies
	}
	return nil
}

type GetModuleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PolicyId      string                 `protobuf:"bytes,2,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	PolicyName    string                 `protobuf:"bytes,3,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	InstanceLabel string                 `protobuf:"bytes,4,opt,name=instance_label,json=instanceLabel,proto3" json:"instance_label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetModuleRequest) Reset() {
	*x = GetModuleRequest{}
	mi := &file_aserto_authorizer_policy_v1_policy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetModuleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModuleRequest) ProtoMessage() {}

func (x *GetModuleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_authorizer_policy_v1_policy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModuleRequest.ProtoReflect.Descriptor instead.
func (*GetModuleRequest) Descriptor() ([]byte, []int) {
	return file_aserto_authorizer_policy_v1_policy_proto_rawDescGZIP(), []int{4}
}

func (x *GetModuleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetModuleRequest) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *GetModuleRequest) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

func (x *GetModuleRequest) GetInstanceLabel() string {
	if x != nil {
		return x.InstanceLabel
	}
	return ""
}

type GetModuleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Module        *Module                `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetModuleResponse) Reset() {
	*x = GetModuleResponse{}
	mi := &file_aserto_authorizer_policy_v1_policy_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetModuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModuleResponse) ProtoMessage() {}

func (x *GetModuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_authorizer_policy_v1_policy_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModuleResponse.ProtoReflect.Descriptor instead.
func (*GetModuleResponse) Descriptor() ([]byte, []int) {
	return file_aserto_authorizer_policy_v1_policy_proto_rawDescGZIP(), []int{5}
}

func (x *GetModuleResponse) GetModule() *Module {
	if x != nil {
		return x.Module
	}
	return nil
}

type PolicyItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolicyItem) Reset() {
	*x = PolicyItem{}
	mi := &file_aserto_authorizer_policy_v1_policy_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyItem) ProtoMessage() {}

func (x *PolicyItem) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_authorizer_policy_v1_policy_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyItem.ProtoReflect.Descriptor instead.
func (*PolicyItem) Descriptor() ([]byte, []int) {
	return file_aserto_authorizer_policy_v1_policy_proto_rawDescGZIP(), []int{6}
}

func (x *PolicyItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PolicyItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Module struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Rules         []string               `protobuf:"bytes,4,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Module) Reset() {
	*x = Module{}
	mi := &file_aserto_authorizer_policy_v1_policy_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_authorizer_policy_v1_policy_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_aserto_authorizer_policy_v1_policy_proto_rawDescGZIP(), []int{7}
}

func (x *Module) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Module) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Module) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Module) GetRules() []string {
	if x != nil {
		return x.Rules
	}
	return nil
}

var File_aserto_authorizer_policy_v1_policy_proto protoreflect.FileDescriptor

const file_aserto_authorizer_policy_v1_policy_proto_rawDesc = "" +
	"\n" +
	"(aserto/authorizer/policy/v1/policy.proto\x12\x1baserto.authorizer.policy.v1\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\x15\n" +
	"\x13ListPoliciesRequest\"Y\n" +
	"\x14ListPoliciesResponse\x12A\n" +
	"\aresults\x18\x01 \x03(\v2'.aserto.authorizer.policy.v1.PolicyItemR\aresults\"_\n" +
	"\x12GetPoliciesRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12%\n" +
	"\x0einstance_label\x18\x03 \x01(\tR\rinstanceLabel\"~\n" +
	"\x13GetPoliciesResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12C\n" +
	"\bpolicies\x18\x03 \x03(\v2'.aserto.authorizer.policy.v1.PolicyItemR\bpolicies\"\x87\x01\n" +
	"\x10GetModuleRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tpolicy_id\x18\x02 \x01(\tR\bpolicyId\x12\x1f\n" +
	"\vpolicy_name\x18\x03 \x01(\tR\n" +
	"policyName\x12%\n" +
	"\x0einstance_label\x18\x04 \x01(\tR\rinstanceLabel\"P\n" +
	"\x11GetModuleResponse\x12;\n" +
	"\x06module\x18\x01 \x01(\v2#.aserto.authorizer.policy.v1.ModuleR\x06module\"0\n" +
	"\n" +
	"PolicyItem\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\\\n" +
	"\x06Module\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x14\n" +
	"\x05rules\x18\x04 \x03(\tR\x05rules2\xe6\x06\n" +
	"\x06Policy\x12\xbf\x02\n" +
	"\fListPolicies\x120.aserto.authorizer.policy.v1.ListPoliciesRequest\x1a1.aserto.authorizer.policy.v1.ListPoliciesResponse\"\xc9\x01\x92A\xa6\x01\n" +
	"\x06policy\x12\rList policies\x1a^Returns the list of policy bundle identifiers currently loaded within the authorizer instance.*\x14policy.list_policiesb\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02\x19\x12\x17/api/v1/policy/policies\x12\x9b\x02\n" +
	"\vGetPolicies\x12/.aserto.authorizer.policy.v1.GetPoliciesRequest\x1a0.aserto.authorizer.policy.v1.GetPoliciesResponse\"\xa8\x01\x92A\x80\x01\n" +
	"\x06policy\x12\fGet policies\x1a:Returns the policies present within a given policy bundle.*\x13policy.get_policiesb\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02\x1e\x12\x1c/api/v1/policy/policies/{id}\x12\xfb\x01\n" +
	"\tGetModule\x12-.aserto.authorizer.policy.v1.GetModuleRequest\x1a..aserto.authorizer.policy.v1.GetModuleResponse\"\x8e\x01\x92Ah\n" +
	"\x06policy\x12\n" +
	"Get module\x1a&Returns the module for a given policy.*\x11policy.get_moduleb\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02\x1d\x12\x1b/api/v1/policy/modules/{id}B\xe6\x01\x92A\x82\x01*\x01\x022\x10application/json:\x10application/jsonZ@\n" +
	"\x1a\n" +
	"\x03JWT\x12\x13\b\x02\x1a\rauthorization \x02\n" +
	"\"\n" +
	"\bTenantID\x12\x16\b\x02\x1a\x10aserto-tenant-id \x02b\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00Z@github.com/aserto-dev/go-grpc/aserto/authorizer/policy/v1;policy\xaa\x02\x1bAserto.Authorizer.Policy.V1b\x06proto3"

var (
	file_aserto_authorizer_policy_v1_policy_proto_rawDescOnce sync.Once
	file_aserto_authorizer_policy_v1_policy_proto_rawDescData []byte
)

func file_aserto_authorizer_policy_v1_policy_proto_rawDescGZIP() []byte {
	file_aserto_authorizer_policy_v1_policy_proto_rawDescOnce.Do(func() {
		file_aserto_authorizer_policy_v1_policy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_aserto_authorizer_policy_v1_policy_proto_rawDesc), len(file_aserto_authorizer_policy_v1_policy_proto_rawDesc)))
	})
	return file_aserto_authorizer_policy_v1_policy_proto_rawDescData
}

var file_aserto_authorizer_policy_v1_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_aserto_authorizer_policy_v1_policy_proto_goTypes = []any{
	(*ListPoliciesRequest)(nil),  // 0: aserto.authorizer.policy.v1.ListPoliciesRequest
	(*ListPoliciesResponse)(nil), // 1: aserto.authorizer.policy.v1.ListPoliciesResponse
	(*GetPoliciesRequest)(nil),   // 2: aserto.authorizer.policy.v1.GetPoliciesRequest
	(*GetPoliciesResponse)(nil),  // 3: aserto.authorizer.policy.v1.GetPoliciesResponse
	(*GetModuleRequest)(nil),     // 4: aserto.authorizer.policy.v1.GetModuleRequest
	(*GetModuleResponse)(nil),    // 5: aserto.authorizer.policy.v1.GetModuleResponse
	(*PolicyItem)(nil),           // 6: aserto.authorizer.policy.v1.PolicyItem
	(*Module)(nil),               // 7: aserto.authorizer.policy.v1.Module
}
var file_aserto_authorizer_policy_v1_policy_proto_depIdxs = []int32{
	6, // 0: aserto.authorizer.policy.v1.ListPoliciesResponse.results:type_name -> aserto.authorizer.policy.v1.PolicyItem
	6, // 1: aserto.authorizer.policy.v1.GetPoliciesResponse.policies:type_name -> aserto.authorizer.policy.v1.PolicyItem
	7, // 2: aserto.authorizer.policy.v1.GetModuleResponse.module:type_name -> aserto.authorizer.policy.v1.Module
	0, // 3: aserto.authorizer.policy.v1.Policy.ListPolicies:input_type -> aserto.authorizer.policy.v1.ListPoliciesRequest
	2, // 4: aserto.authorizer.policy.v1.Policy.GetPolicies:input_type -> aserto.authorizer.policy.v1.GetPoliciesRequest
	4, // 5: aserto.authorizer.policy.v1.Policy.GetModule:input_type -> aserto.authorizer.policy.v1.GetModuleRequest
	1, // 6: aserto.authorizer.policy.v1.Policy.ListPolicies:output_type -> aserto.authorizer.policy.v1.ListPoliciesResponse
	3, // 7: aserto.authorizer.policy.v1.Policy.GetPolicies:output_type -> aserto.authorizer.policy.v1.GetPoliciesResponse
	5, // 8: aserto.authorizer.policy.v1.Policy.GetModule:output_type -> aserto.authorizer.policy.v1.GetModuleResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_aserto_authorizer_policy_v1_policy_proto_init() }
func file_aserto_authorizer_policy_v1_policy_proto_init() {
	if File_aserto_authorizer_policy_v1_policy_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_aserto_authorizer_policy_v1_policy_proto_rawDesc), len(file_aserto_authorizer_policy_v1_policy_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aserto_authorizer_policy_v1_policy_proto_goTypes,
		DependencyIndexes: file_aserto_authorizer_policy_v1_policy_proto_depIdxs,
		MessageInfos:      file_aserto_authorizer_policy_v1_policy_proto_msgTypes,
	}.Build()
	File_aserto_authorizer_policy_v1_policy_proto = out.File
	file_aserto_authorizer_policy_v1_policy_proto_goTypes = nil
	file_aserto_authorizer_policy_v1_policy_proto_depIdxs = nil
}
