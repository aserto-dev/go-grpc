// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: aserto/api/v2/workflows.proto

package api

import (
	_ "github.com/aserto-dev/go-grpc/aserto/options/v1"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkflowState int32

const (
	WorkflowState_WORKFLOW_STATE_UNKNOWN WorkflowState = 0 // Value not set.
	WorkflowState_WORKFLOW_STATE_RUNNING WorkflowState = 1 // Workflow is running.
	WorkflowState_WORKFLOW_STATE_DONE    WorkflowState = 2 // Workflow has completed.
)

// Enum value maps for WorkflowState.
var (
	WorkflowState_name = map[int32]string{
		0: "WORKFLOW_STATE_UNKNOWN",
		1: "WORKFLOW_STATE_RUNNING",
		2: "WORKFLOW_STATE_DONE",
	}
	WorkflowState_value = map[string]int32{
		"WORKFLOW_STATE_UNKNOWN": 0,
		"WORKFLOW_STATE_RUNNING": 1,
		"WORKFLOW_STATE_DONE":    2,
	}
)

func (x WorkflowState) Enum() *WorkflowState {
	p := new(WorkflowState)
	*p = x
	return p
}

func (x WorkflowState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkflowState) Descriptor() protoreflect.EnumDescriptor {
	return file_aserto_api_v2_workflows_proto_enumTypes[0].Descriptor()
}

func (WorkflowState) Type() protoreflect.EnumType {
	return &file_aserto_api_v2_workflows_proto_enumTypes[0]
}

func (x WorkflowState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkflowState.Descriptor instead.
func (WorkflowState) EnumDescriptor() ([]byte, []int) {
	return file_aserto_api_v2_workflows_proto_rawDescGZIP(), []int{0}
}

type PolicyDesiredState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy     *Policy     `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	Repository *Repository `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	Source     *Source     `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Instance   []*Instance `protobuf:"bytes,4,rep,name=instance,proto3" json:"instance,omitempty"`
}

func (x *PolicyDesiredState) Reset() {
	*x = PolicyDesiredState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_api_v2_workflows_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyDesiredState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyDesiredState) ProtoMessage() {}

func (x *PolicyDesiredState) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_api_v2_workflows_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyDesiredState.ProtoReflect.Descriptor instead.
func (*PolicyDesiredState) Descriptor() ([]byte, []int) {
	return file_aserto_api_v2_workflows_proto_rawDescGZIP(), []int{0}
}

func (x *PolicyDesiredState) GetPolicy() *Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *PolicyDesiredState) GetRepository() *Repository {
	if x != nil {
		return x.Repository
	}
	return nil
}

func (x *PolicyDesiredState) GetSource() *Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *PolicyDesiredState) GetInstance() []*Instance {
	if x != nil {
		return x.Instance
	}
	return nil
}

var File_aserto_api_v2_workflows_proto protoreflect.FileDescriptor

var file_aserto_api_v2_workflows_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0d, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x1a, 0x1b,
	0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x69, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x61, 0x73, 0x65,
	0x72, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x61, 0x73, 0x65, 0x72, 0x74,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x32, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe2, 0x01, 0x0a, 0x12, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x44, 0x65, 0x73,
	0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x73, 0x65, 0x72,
	0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61,
	0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x32, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2a, 0x60, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x57, 0x4f, 0x52, 0x4b,
	0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01,
	0x12, 0x17, 0x0a, 0x13, 0x57, 0x4f, 0x52, 0x4b, 0x46, 0x4c, 0x4f, 0x57, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x42, 0x41, 0x5a, 0x2f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2d, 0x64,
	0x65, 0x76, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x73, 0x65, 0x72, 0x74,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x3b, 0x61, 0x70, 0x69, 0xaa, 0x02, 0x0d, 0x41,
	0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x41, 0x50, 0x49, 0x2e, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aserto_api_v2_workflows_proto_rawDescOnce sync.Once
	file_aserto_api_v2_workflows_proto_rawDescData = file_aserto_api_v2_workflows_proto_rawDesc
)

func file_aserto_api_v2_workflows_proto_rawDescGZIP() []byte {
	file_aserto_api_v2_workflows_proto_rawDescOnce.Do(func() {
		file_aserto_api_v2_workflows_proto_rawDescData = protoimpl.X.CompressGZIP(file_aserto_api_v2_workflows_proto_rawDescData)
	})
	return file_aserto_api_v2_workflows_proto_rawDescData
}

var file_aserto_api_v2_workflows_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_aserto_api_v2_workflows_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_aserto_api_v2_workflows_proto_goTypes = []interface{}{
	(WorkflowState)(0),         // 0: aserto.api.v2.WorkflowState
	(*PolicyDesiredState)(nil), // 1: aserto.api.v2.PolicyDesiredState
	(*Policy)(nil),             // 2: aserto.api.v2.Policy
	(*Repository)(nil),         // 3: aserto.api.v2.Repository
	(*Source)(nil),             // 4: aserto.api.v2.Source
	(*Instance)(nil),           // 5: aserto.api.v2.Instance
}
var file_aserto_api_v2_workflows_proto_depIdxs = []int32{
	2, // 0: aserto.api.v2.PolicyDesiredState.policy:type_name -> aserto.api.v2.Policy
	3, // 1: aserto.api.v2.PolicyDesiredState.repository:type_name -> aserto.api.v2.Repository
	4, // 2: aserto.api.v2.PolicyDesiredState.source:type_name -> aserto.api.v2.Source
	5, // 3: aserto.api.v2.PolicyDesiredState.instance:type_name -> aserto.api.v2.Instance
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_aserto_api_v2_workflows_proto_init() }
func file_aserto_api_v2_workflows_proto_init() {
	if File_aserto_api_v2_workflows_proto != nil {
		return
	}
	file_aserto_api_v2_instance_proto_init()
	file_aserto_api_v2_policy_proto_init()
	file_aserto_api_v2_repository_proto_init()
	file_aserto_api_v2_source_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_aserto_api_v2_workflows_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyDesiredState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aserto_api_v2_workflows_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aserto_api_v2_workflows_proto_goTypes,
		DependencyIndexes: file_aserto_api_v2_workflows_proto_depIdxs,
		EnumInfos:         file_aserto_api_v2_workflows_proto_enumTypes,
		MessageInfos:      file_aserto_api_v2_workflows_proto_msgTypes,
	}.Build()
	File_aserto_api_v2_workflows_proto = out.File
	file_aserto_api_v2_workflows_proto_rawDesc = nil
	file_aserto_api_v2_workflows_proto_goTypes = nil
	file_aserto_api_v2_workflows_proto_depIdxs = nil
}
