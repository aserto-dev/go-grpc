// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        (unknown)
// source: aserto/api/v2/management.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SyncMode int32

const (
	// nothing selected (default initialization value).
	SyncMode_SYNC_MODE_UNKNOWN SyncMode = 0
	// full sync, requests full export of source, contains new and updated elements only.
	SyncMode_SYNC_MODE_FULL SyncMode = 1
	// full sync with differential, removing items deleted in source from target.
	SyncMode_SYNC_MODE_DIFF SyncMode = 2
	// watermark sync, pulls all new and updated data since last watermark.
	SyncMode_SYNC_MODE_WATERMARK SyncMode = 4
	// manifest sync, pulls manifest from source and applies to target when etags are different.
	SyncMode_SYNC_MODE_MANIFEST SyncMode = 8
)

// Enum value maps for SyncMode.
var (
	SyncMode_name = map[int32]string{
		0: "SYNC_MODE_UNKNOWN",
		1: "SYNC_MODE_FULL",
		2: "SYNC_MODE_DIFF",
		4: "SYNC_MODE_WATERMARK",
		8: "SYNC_MODE_MANIFEST",
	}
	SyncMode_value = map[string]int32{
		"SYNC_MODE_UNKNOWN":   0,
		"SYNC_MODE_FULL":      1,
		"SYNC_MODE_DIFF":      2,
		"SYNC_MODE_WATERMARK": 4,
		"SYNC_MODE_MANIFEST":  8,
	}
)

func (x SyncMode) Enum() *SyncMode {
	p := new(SyncMode)
	*p = x
	return p
}

func (x SyncMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncMode) Descriptor() protoreflect.EnumDescriptor {
	return file_aserto_api_v2_management_proto_enumTypes[0].Descriptor()
}

func (SyncMode) Type() protoreflect.EnumType {
	return &file_aserto_api_v2_management_proto_enumTypes[0]
}

func (x SyncMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncMode.Descriptor instead.
func (SyncMode) EnumDescriptor() ([]byte, []int) {
	return file_aserto_api_v2_management_proto_rawDescGZIP(), []int{0}
}

// InstanceInfo has data about a running aserto instance that is registered with the control
// plane.
type InstanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyId      string `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`                // The id (v1) of the policy associated with the instance.
	PolicyLabel   string `protobuf:"bytes,2,opt,name=policy_label,json=policyLabel,proto3" json:"policy_label,omitempty"`       // The label of the policy associated with the instance.
	RemoteHost    string `protobuf:"bytes,3,opt,name=remote_host,json=remoteHost,proto3" json:"remote_host,omitempty"`          // The name of the host where the instance is running.
	ConnectionId  string `protobuf:"bytes,4,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`    // The connection an edge authorizer used to connect to the control plane.
	CertificateId string `protobuf:"bytes,5,opt,name=certificate_id,json=certificateId,proto3" json:"certificate_id,omitempty"` // The id of the certificate used to connect to the control plane.
	PolicyName    string `protobuf:"bytes,6,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`          // The policy (v2) name of the policy associated with the instance.
}

func (x *InstanceInfo) Reset() {
	*x = InstanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_api_v2_management_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceInfo) ProtoMessage() {}

func (x *InstanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_api_v2_management_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceInfo.ProtoReflect.Descriptor instead.
func (*InstanceInfo) Descriptor() ([]byte, []int) {
	return file_aserto_api_v2_management_proto_rawDescGZIP(), []int{0}
}

func (x *InstanceInfo) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

func (x *InstanceInfo) GetPolicyLabel() string {
	if x != nil {
		return x.PolicyLabel
	}
	return ""
}

func (x *InstanceInfo) GetRemoteHost() string {
	if x != nil {
		return x.RemoteHost
	}
	return ""
}

func (x *InstanceInfo) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *InstanceInfo) GetCertificateId() string {
	if x != nil {
		return x.CertificateId
	}
	return ""
}

func (x *InstanceInfo) GetPolicyName() string {
	if x != nil {
		return x.PolicyName
	}
	return ""
}

// InstanceRegistration has data about an instance's registration with the control plane.
type InstanceRegistration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // Unique id of the instance registration, generated by the control plane.
	Info *InstanceInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"` // Information about the registered instance.
}

func (x *InstanceRegistration) Reset() {
	*x = InstanceRegistration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_api_v2_management_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceRegistration) ProtoMessage() {}

func (x *InstanceRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_api_v2_management_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceRegistration.ProtoReflect.Descriptor instead.
func (*InstanceRegistration) Descriptor() ([]byte, []int) {
	return file_aserto_api_v2_management_proto_rawDescGZIP(), []int{1}
}

func (x *InstanceRegistration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InstanceRegistration) GetInfo() *InstanceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// Command represents a command that may be sent to and then processed by an instance.
type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*Command_Discovery
	//	*Command_SyncEdgeDirectory
	Data isCommand_Data `protobuf_oneof:"data"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_api_v2_management_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_api_v2_management_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_aserto_api_v2_management_proto_rawDescGZIP(), []int{2}
}

func (m *Command) GetData() isCommand_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Command) GetDiscovery() *DiscoveryCommand {
	if x, ok := x.GetData().(*Command_Discovery); ok {
		return x.Discovery
	}
	return nil
}

func (x *Command) GetSyncEdgeDirectory() *SyncEdgeDirectoryCommand {
	if x, ok := x.GetData().(*Command_SyncEdgeDirectory); ok {
		return x.SyncEdgeDirectory
	}
	return nil
}

type isCommand_Data interface {
	isCommand_Data()
}

type Command_Discovery struct {
	Discovery *DiscoveryCommand `protobuf:"bytes,1,opt,name=discovery,proto3,oneof"`
}

type Command_SyncEdgeDirectory struct {
	SyncEdgeDirectory *SyncEdgeDirectoryCommand `protobuf:"bytes,2,opt,name=sync_edge_directory,json=syncEdgeDirectory,proto3,oneof"`
}

func (*Command_Discovery) isCommand_Data() {}

func (*Command_SyncEdgeDirectory) isCommand_Data() {}

// Run OPA discovery immediatley
type DiscoveryCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DiscoveryCommand) Reset() {
	*x = DiscoveryCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_api_v2_management_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveryCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryCommand) ProtoMessage() {}

func (x *DiscoveryCommand) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_api_v2_management_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryCommand.ProtoReflect.Descriptor instead.
func (*DiscoveryCommand) Descriptor() ([]byte, []int) {
	return file_aserto_api_v2_management_proto_rawDescGZIP(), []int{3}
}

// Sync the edge directory
type SyncEdgeDirectoryCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sync mode
	Mode SyncMode `protobuf:"varint,1,opt,name=mode,proto3,enum=aserto.api.v2.SyncMode" json:"mode,omitempty"`
}

func (x *SyncEdgeDirectoryCommand) Reset() {
	*x = SyncEdgeDirectoryCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aserto_api_v2_management_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncEdgeDirectoryCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncEdgeDirectoryCommand) ProtoMessage() {}

func (x *SyncEdgeDirectoryCommand) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_api_v2_management_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncEdgeDirectoryCommand.ProtoReflect.Descriptor instead.
func (*SyncEdgeDirectoryCommand) Descriptor() ([]byte, []int) {
	return file_aserto_api_v2_management_proto_rawDescGZIP(), []int{4}
}

func (x *SyncEdgeDirectoryCommand) GetMode() SyncMode {
	if x != nil {
		return x.Mode
	}
	return SyncMode_SYNC_MODE_UNKNOWN
}

var File_aserto_api_v2_management_proto protoreflect.FileDescriptor

var file_aserto_api_v2_management_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x22,
	0xdc, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x57,
	0x0a, 0x14, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xad, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x3f, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x12, 0x59, 0x0a, 0x13, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x65, 0x64, 0x67,
	0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x64, 0x67, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x11, 0x73, 0x79,
	0x6e, 0x63, 0x45, 0x64, 0x67, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x42,
	0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x47, 0x0a, 0x18, 0x53,
	0x79, 0x6e, 0x63, 0x45, 0x64, 0x67, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x2a, 0x7a, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63, 0x4d, 0x6f, 0x64, 0x65,
	0x12, 0x15, 0x0a, 0x11, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x59, 0x4e, 0x43, 0x5f,
	0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53,
	0x59, 0x4e, 0x43, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x49, 0x46, 0x46, 0x10, 0x02, 0x12,
	0x17, 0x0a, 0x13, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x57, 0x41, 0x54,
	0x45, 0x52, 0x4d, 0x41, 0x52, 0x4b, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x59, 0x4e, 0x43,
	0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x49, 0x46, 0x45, 0x53, 0x54, 0x10, 0x08,
	0x42, 0x41, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x73, 0x65, 0x72, 0x74, 0x6f, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x61, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x3b,
	0x61, 0x70, 0x69, 0xaa, 0x02, 0x0d, 0x41, 0x73, 0x65, 0x72, 0x74, 0x6f, 0x2e, 0x41, 0x50, 0x49,
	0x2e, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aserto_api_v2_management_proto_rawDescOnce sync.Once
	file_aserto_api_v2_management_proto_rawDescData = file_aserto_api_v2_management_proto_rawDesc
)

func file_aserto_api_v2_management_proto_rawDescGZIP() []byte {
	file_aserto_api_v2_management_proto_rawDescOnce.Do(func() {
		file_aserto_api_v2_management_proto_rawDescData = protoimpl.X.CompressGZIP(file_aserto_api_v2_management_proto_rawDescData)
	})
	return file_aserto_api_v2_management_proto_rawDescData
}

var file_aserto_api_v2_management_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_aserto_api_v2_management_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_aserto_api_v2_management_proto_goTypes = []interface{}{
	(SyncMode)(0),                    // 0: aserto.api.v2.SyncMode
	(*InstanceInfo)(nil),             // 1: aserto.api.v2.InstanceInfo
	(*InstanceRegistration)(nil),     // 2: aserto.api.v2.InstanceRegistration
	(*Command)(nil),                  // 3: aserto.api.v2.Command
	(*DiscoveryCommand)(nil),         // 4: aserto.api.v2.DiscoveryCommand
	(*SyncEdgeDirectoryCommand)(nil), // 5: aserto.api.v2.SyncEdgeDirectoryCommand
}
var file_aserto_api_v2_management_proto_depIdxs = []int32{
	1, // 0: aserto.api.v2.InstanceRegistration.info:type_name -> aserto.api.v2.InstanceInfo
	4, // 1: aserto.api.v2.Command.discovery:type_name -> aserto.api.v2.DiscoveryCommand
	5, // 2: aserto.api.v2.Command.sync_edge_directory:type_name -> aserto.api.v2.SyncEdgeDirectoryCommand
	0, // 3: aserto.api.v2.SyncEdgeDirectoryCommand.mode:type_name -> aserto.api.v2.SyncMode
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_aserto_api_v2_management_proto_init() }
func file_aserto_api_v2_management_proto_init() {
	if File_aserto_api_v2_management_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aserto_api_v2_management_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_api_v2_management_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceRegistration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_api_v2_management_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_api_v2_management_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoveryCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aserto_api_v2_management_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncEdgeDirectoryCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_aserto_api_v2_management_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Command_Discovery)(nil),
		(*Command_SyncEdgeDirectory)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aserto_api_v2_management_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aserto_api_v2_management_proto_goTypes,
		DependencyIndexes: file_aserto_api_v2_management_proto_depIdxs,
		EnumInfos:         file_aserto_api_v2_management_proto_enumTypes,
		MessageInfos:      file_aserto_api_v2_management_proto_msgTypes,
	}.Build()
	File_aserto_api_v2_management_proto = out.File
	file_aserto_api_v2_management_proto_rawDesc = nil
	file_aserto_api_v2_management_proto_goTypes = nil
	file_aserto_api_v2_management_proto_depIdxs = nil
}
