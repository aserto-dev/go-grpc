// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: aserto/api/v1/policyref.proto

package api

import (
	_ "github.com/aserto-dev/go-grpc/aserto/options/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PolicyRef struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Configuration for policy source code
	SourceUrl    string `protobuf:"bytes,3,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	ConnectionId string `protobuf:"bytes,4,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	SourceName   string `protobuf:"bytes,5,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	// Configuration for enabling/disabling decision logging
	DecisionLogging *bool `protobuf:"varint,6,opt,name=decision_logging,json=decisionLogging,proto3,oneof" json:"decision_logging,omitempty"`
	// Configuration for linking a policy image from an OCI registry to a policy ref
	RegistryConnectionId string `protobuf:"bytes,7,opt,name=registry_connection_id,json=registryConnectionId,proto3" json:"registry_connection_id,omitempty"`
	RegistryImage        string `protobuf:"bytes,8,opt,name=registry_image,json=registryImage,proto3" json:"registry_image,omitempty"`
	RegistryTag          string `protobuf:"bytes,9,opt,name=registry_tag,json=registryTag,proto3" json:"registry_tag,omitempty"`
	RegistryOrg          string `protobuf:"bytes,10,opt,name=registry_org,json=registryOrg,proto3" json:"registry_org,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PolicyRef) Reset() {
	*x = PolicyRef{}
	mi := &file_aserto_api_v1_policyref_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyRef) ProtoMessage() {}

func (x *PolicyRef) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_api_v1_policyref_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyRef.ProtoReflect.Descriptor instead.
func (*PolicyRef) Descriptor() ([]byte, []int) {
	return file_aserto_api_v1_policyref_proto_rawDescGZIP(), []int{0}
}

func (x *PolicyRef) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PolicyRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PolicyRef) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *PolicyRef) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *PolicyRef) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *PolicyRef) GetDecisionLogging() bool {
	if x != nil && x.DecisionLogging != nil {
		return *x.DecisionLogging
	}
	return false
}

func (x *PolicyRef) GetRegistryConnectionId() string {
	if x != nil {
		return x.RegistryConnectionId
	}
	return ""
}

func (x *PolicyRef) GetRegistryImage() string {
	if x != nil {
		return x.RegistryImage
	}
	return ""
}

func (x *PolicyRef) GetRegistryTag() string {
	if x != nil {
		return x.RegistryTag
	}
	return ""
}

func (x *PolicyRef) GetRegistryOrg() string {
	if x != nil {
		return x.RegistryOrg
	}
	return ""
}

var File_aserto_api_v1_policyref_proto protoreflect.FileDescriptor

const file_aserto_api_v1_policyref_proto_rawDesc = "" +
	"\n" +
	"\x1daserto/api/v1/policyref.proto\x12\raserto.api.v1\x1a\x1baserto/options/v1/ids.proto\"\x8e\x03\n" +
	"\tPolicyRef\x12\x14\n" +
	"\x02id\x18\x01 \x01(\tB\x04\x90\xb5\x18\x04R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"source_url\x18\x03 \x01(\tR\tsourceUrl\x12)\n" +
	"\rconnection_id\x18\x04 \x01(\tB\x04\x90\xb5\x18\aR\fconnectionId\x12\x1f\n" +
	"\vsource_name\x18\x05 \x01(\tR\n" +
	"sourceName\x12.\n" +
	"\x10decision_logging\x18\x06 \x01(\bH\x00R\x0fdecisionLogging\x88\x01\x01\x12:\n" +
	"\x16registry_connection_id\x18\a \x01(\tB\x04\x90\xb5\x18\aR\x14registryConnectionId\x12%\n" +
	"\x0eregistry_image\x18\b \x01(\tR\rregistryImage\x12!\n" +
	"\fregistry_tag\x18\t \x01(\tR\vregistryTag\x12!\n" +
	"\fregistry_org\x18\n" +
	" \x01(\tR\vregistryOrgB\x13\n" +
	"\x11_decision_loggingBAZ/github.com/aserto-dev/go-grpc/aserto/api/v1;api\xaa\x02\rAserto.API.V1b\x06proto3"

var (
	file_aserto_api_v1_policyref_proto_rawDescOnce sync.Once
	file_aserto_api_v1_policyref_proto_rawDescData []byte
)

func file_aserto_api_v1_policyref_proto_rawDescGZIP() []byte {
	file_aserto_api_v1_policyref_proto_rawDescOnce.Do(func() {
		file_aserto_api_v1_policyref_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_aserto_api_v1_policyref_proto_rawDesc), len(file_aserto_api_v1_policyref_proto_rawDesc)))
	})
	return file_aserto_api_v1_policyref_proto_rawDescData
}

var file_aserto_api_v1_policyref_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_aserto_api_v1_policyref_proto_goTypes = []any{
	(*PolicyRef)(nil), // 0: aserto.api.v1.PolicyRef
}
var file_aserto_api_v1_policyref_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_aserto_api_v1_policyref_proto_init() }
func file_aserto_api_v1_policyref_proto_init() {
	if File_aserto_api_v1_policyref_proto != nil {
		return
	}
	file_aserto_api_v1_policyref_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_aserto_api_v1_policyref_proto_rawDesc), len(file_aserto_api_v1_policyref_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aserto_api_v1_policyref_proto_goTypes,
		DependencyIndexes: file_aserto_api_v1_policyref_proto_depIdxs,
		MessageInfos:      file_aserto_api_v1_policyref_proto_msgTypes,
	}.Build()
	File_aserto_api_v1_policyref_proto = out.File
	file_aserto_api_v1_policyref_proto_goTypes = nil
	file_aserto_api_v1_policyref_proto_depIdxs = nil
}
