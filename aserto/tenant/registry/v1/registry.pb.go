// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: aserto/tenant/registry/v1/registry.proto

package registry

import (
	v1 "github.com/aserto-dev/go-grpc/aserto/api/v1"
	_ "github.com/aserto-dev/go-grpc/aserto/options/v1"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListRegistryReposRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Org           string                 `protobuf:"bytes,2,opt,name=org,proto3" json:"org,omitempty"`
	Page          *v1.PaginationRequest  `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRegistryReposRequest) Reset() {
	*x = ListRegistryReposRequest{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRegistryReposRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegistryReposRequest) ProtoMessage() {}

func (x *ListRegistryReposRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegistryReposRequest.ProtoReflect.Descriptor instead.
func (*ListRegistryReposRequest) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{0}
}

func (x *ListRegistryReposRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ListRegistryReposRequest) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

func (x *ListRegistryReposRequest) GetPage() *v1.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListRegistryReposResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RegistryRepos []*v1.RegistryRepo     `protobuf:"bytes,1,rep,name=registry_repos,json=registryRepos,proto3" json:"registry_repos,omitempty"`
	Page          *v1.PaginationResponse `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRegistryReposResponse) Reset() {
	*x = ListRegistryReposResponse{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRegistryReposResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegistryReposResponse) ProtoMessage() {}

func (x *ListRegistryReposResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegistryReposResponse.ProtoReflect.Descriptor instead.
func (*ListRegistryReposResponse) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{1}
}

func (x *ListRegistryReposResponse) GetRegistryRepos() []*v1.RegistryRepo {
	if x != nil {
		return x.RegistryRepos
	}
	return nil
}

func (x *ListRegistryReposResponse) GetPage() *v1.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListRegistryRepoTagsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Repo          *v1.RegistryRepo       `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	Page          *v1.PaginationRequest  `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
	Deep          bool                   `protobuf:"varint,4,opt,name=deep,proto3" json:"deep,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRegistryRepoTagsRequest) Reset() {
	*x = ListRegistryRepoTagsRequest{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRegistryRepoTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegistryRepoTagsRequest) ProtoMessage() {}

func (x *ListRegistryRepoTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegistryRepoTagsRequest.ProtoReflect.Descriptor instead.
func (*ListRegistryRepoTagsRequest) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{2}
}

func (x *ListRegistryRepoTagsRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ListRegistryRepoTagsRequest) GetRepo() *v1.RegistryRepo {
	if x != nil {
		return x.Repo
	}
	return nil
}

func (x *ListRegistryRepoTagsRequest) GetPage() *v1.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListRegistryRepoTagsRequest) GetDeep() bool {
	if x != nil {
		return x.Deep
	}
	return false
}

type ListRegistryRepoTagsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tags          []*v1.RegistryRepoTag  `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	Page          *v1.PaginationResponse `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRegistryRepoTagsResponse) Reset() {
	*x = ListRegistryRepoTagsResponse{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRegistryRepoTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegistryRepoTagsResponse) ProtoMessage() {}

func (x *ListRegistryRepoTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegistryRepoTagsResponse.ProtoReflect.Descriptor instead.
func (*ListRegistryRepoTagsResponse) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{3}
}

func (x *ListRegistryRepoTagsResponse) GetTags() []*v1.RegistryRepoTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ListRegistryRepoTagsResponse) GetPage() *v1.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListRegistryRepoDigestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Repo          *v1.RegistryRepo       `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	Page          *v1.PaginationRequest  `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
	Deep          bool                   `protobuf:"varint,4,opt,name=deep,proto3" json:"deep,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRegistryRepoDigestsRequest) Reset() {
	*x = ListRegistryRepoDigestsRequest{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRegistryRepoDigestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegistryRepoDigestsRequest) ProtoMessage() {}

func (x *ListRegistryRepoDigestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegistryRepoDigestsRequest.ProtoReflect.Descriptor instead.
func (*ListRegistryRepoDigestsRequest) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{4}
}

func (x *ListRegistryRepoDigestsRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ListRegistryRepoDigestsRequest) GetRepo() *v1.RegistryRepo {
	if x != nil {
		return x.Repo
	}
	return nil
}

func (x *ListRegistryRepoDigestsRequest) GetPage() *v1.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListRegistryRepoDigestsRequest) GetDeep() bool {
	if x != nil {
		return x.Deep
	}
	return false
}

type ListRegistryRepoDigestsResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Digests       []*v1.RegistryRepoDigest `protobuf:"bytes,1,rep,name=digests,proto3" json:"digests,omitempty"`
	Page          *v1.PaginationResponse   `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRegistryRepoDigestsResponse) Reset() {
	*x = ListRegistryRepoDigestsResponse{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRegistryRepoDigestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegistryRepoDigestsResponse) ProtoMessage() {}

func (x *ListRegistryRepoDigestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegistryRepoDigestsResponse.ProtoReflect.Descriptor instead.
func (*ListRegistryRepoDigestsResponse) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{5}
}

func (x *ListRegistryRepoDigestsResponse) GetDigests() []*v1.RegistryRepoDigest {
	if x != nil {
		return x.Digests
	}
	return nil
}

func (x *ListRegistryRepoDigestsResponse) GetPage() *v1.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type GetRegistryRepoTagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Repo          *v1.RegistryRepo       `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	Tag           string                 `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRegistryRepoTagRequest) Reset() {
	*x = GetRegistryRepoTagRequest{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRegistryRepoTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegistryRepoTagRequest) ProtoMessage() {}

func (x *GetRegistryRepoTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegistryRepoTagRequest.ProtoReflect.Descriptor instead.
func (*GetRegistryRepoTagRequest) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{6}
}

func (x *GetRegistryRepoTagRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *GetRegistryRepoTagRequest) GetRepo() *v1.RegistryRepo {
	if x != nil {
		return x.Repo
	}
	return nil
}

func (x *GetRegistryRepoTagRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type GetRegistryRepoTagResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tag           *v1.RegistryRepoTag    `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRegistryRepoTagResponse) Reset() {
	*x = GetRegistryRepoTagResponse{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRegistryRepoTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegistryRepoTagResponse) ProtoMessage() {}

func (x *GetRegistryRepoTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegistryRepoTagResponse.ProtoReflect.Descriptor instead.
func (*GetRegistryRepoTagResponse) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{7}
}

func (x *GetRegistryRepoTagResponse) GetTag() *v1.RegistryRepoTag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type CreateRegistryRepoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Repo          *v1.RegistryRepo       `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRegistryRepoRequest) Reset() {
	*x = CreateRegistryRepoRequest{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRegistryRepoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegistryRepoRequest) ProtoMessage() {}

func (x *CreateRegistryRepoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegistryRepoRequest.ProtoReflect.Descriptor instead.
func (*CreateRegistryRepoRequest) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{8}
}

func (x *CreateRegistryRepoRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *CreateRegistryRepoRequest) GetRepo() *v1.RegistryRepo {
	if x != nil {
		return x.Repo
	}
	return nil
}

type CreateRegistryRepoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRegistryRepoResponse) Reset() {
	*x = CreateRegistryRepoResponse{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRegistryRepoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegistryRepoResponse) ProtoMessage() {}

func (x *CreateRegistryRepoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegistryRepoResponse.ProtoReflect.Descriptor instead.
func (*CreateRegistryRepoResponse) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{9}
}

type DeleteRegistryRepoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Repo          *v1.RegistryRepo       `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	Tag           string                 `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRegistryRepoRequest) Reset() {
	*x = DeleteRegistryRepoRequest{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRegistryRepoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRegistryRepoRequest) ProtoMessage() {}

func (x *DeleteRegistryRepoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRegistryRepoRequest.ProtoReflect.Descriptor instead.
func (*DeleteRegistryRepoRequest) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteRegistryRepoRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *DeleteRegistryRepoRequest) GetRepo() *v1.RegistryRepo {
	if x != nil {
		return x.Repo
	}
	return nil
}

func (x *DeleteRegistryRepoRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type DeleteRegistryRepoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRegistryRepoResponse) Reset() {
	*x = DeleteRegistryRepoResponse{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRegistryRepoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRegistryRepoResponse) ProtoMessage() {}

func (x *DeleteRegistryRepoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRegistryRepoResponse.ProtoReflect.Descriptor instead.
func (*DeleteRegistryRepoResponse) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{11}
}

type ListOrgsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Page          *v1.PaginationRequest  `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOrgsRequest) Reset() {
	*x = ListOrgsRequest{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOrgsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgsRequest) ProtoMessage() {}

func (x *ListOrgsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgsRequest.ProtoReflect.Descriptor instead.
func (*ListOrgsRequest) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{12}
}

func (x *ListOrgsRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ListOrgsRequest) GetPage() *v1.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListOrgsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Orgs          []string               `protobuf:"bytes,1,rep,name=orgs,proto3" json:"orgs,omitempty"`
	Page          *v1.PaginationResponse `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOrgsResponse) Reset() {
	*x = ListOrgsResponse{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOrgsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgsResponse) ProtoMessage() {}

func (x *ListOrgsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgsResponse.ProtoReflect.Descriptor instead.
func (*ListOrgsResponse) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{13}
}

func (x *ListOrgsResponse) GetOrgs() []string {
	if x != nil {
		return x.Orgs
	}
	return nil
}

func (x *ListOrgsResponse) GetPage() *v1.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type RegistryRepoAvailableRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Repo          *v1.RegistryRepo       `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegistryRepoAvailableRequest) Reset() {
	*x = RegistryRepoAvailableRequest{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistryRepoAvailableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryRepoAvailableRequest) ProtoMessage() {}

func (x *RegistryRepoAvailableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryRepoAvailableRequest.ProtoReflect.Descriptor instead.
func (*RegistryRepoAvailableRequest) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{14}
}

func (x *RegistryRepoAvailableRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *RegistryRepoAvailableRequest) GetRepo() *v1.RegistryRepo {
	if x != nil {
		return x.Repo
	}
	return nil
}

type RegistryRepoAvailableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Availability  v1.NameAvailability    `protobuf:"varint,1,opt,name=availability,proto3,enum=aserto.api.v1.NameAvailability" json:"availability,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegistryRepoAvailableResponse) Reset() {
	*x = RegistryRepoAvailableResponse{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistryRepoAvailableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryRepoAvailableResponse) ProtoMessage() {}

func (x *RegistryRepoAvailableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryRepoAvailableResponse.ProtoReflect.Descriptor instead.
func (*RegistryRepoAvailableResponse) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{15}
}

func (x *RegistryRepoAvailableResponse) GetAvailability() v1.NameAvailability {
	if x != nil {
		return x.Availability
	}
	return v1.NameAvailability(0)
}

func (x *RegistryRepoAvailableResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ValidPolicyRegistryRepoTagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Repo          *v1.RegistryRepo       `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	Tag           string                 `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidPolicyRegistryRepoTagRequest) Reset() {
	*x = ValidPolicyRegistryRepoTagRequest{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidPolicyRegistryRepoTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidPolicyRegistryRepoTagRequest) ProtoMessage() {}

func (x *ValidPolicyRegistryRepoTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidPolicyRegistryRepoTagRequest.ProtoReflect.Descriptor instead.
func (*ValidPolicyRegistryRepoTagRequest) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{16}
}

func (x *ValidPolicyRegistryRepoTagRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ValidPolicyRegistryRepoTagRequest) GetRepo() *v1.RegistryRepo {
	if x != nil {
		return x.Repo
	}
	return nil
}

func (x *ValidPolicyRegistryRepoTagRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type ValidPolicyRegistryRepoTagResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidPolicyRegistryRepoTagResponse) Reset() {
	*x = ValidPolicyRegistryRepoTagResponse{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidPolicyRegistryRepoTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidPolicyRegistryRepoTagResponse) ProtoMessage() {}

func (x *ValidPolicyRegistryRepoTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidPolicyRegistryRepoTagResponse.ProtoReflect.Descriptor instead.
func (*ValidPolicyRegistryRepoTagResponse) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{17}
}

type CloneRepoRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId            string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	SourceOrg               string                 `protobuf:"bytes,2,opt,name=source_org,json=sourceOrg,proto3" json:"source_org,omitempty"`
	SourceRepo              string                 `protobuf:"bytes,3,opt,name=source_repo,json=sourceRepo,proto3" json:"source_repo,omitempty"`
	SourceTag               string                 `protobuf:"bytes,4,opt,name=source_tag,json=sourceTag,proto3" json:"source_tag,omitempty"`
	DestinationConnectionId string                 `protobuf:"bytes,5,opt,name=destination_connection_id,json=destinationConnectionId,proto3" json:"destination_connection_id,omitempty"`
	DestinationOrg          string                 `protobuf:"bytes,6,opt,name=destination_org,json=destinationOrg,proto3" json:"destination_org,omitempty"`
	DestinationRepo         string                 `protobuf:"bytes,7,opt,name=destination_repo,json=destinationRepo,proto3" json:"destination_repo,omitempty"`
	DestinationTag          string                 `protobuf:"bytes,8,opt,name=destination_tag,json=destinationTag,proto3" json:"destination_tag,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CloneRepoRequest) Reset() {
	*x = CloneRepoRequest{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloneRepoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneRepoRequest) ProtoMessage() {}

func (x *CloneRepoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneRepoRequest.ProtoReflect.Descriptor instead.
func (*CloneRepoRequest) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{18}
}

func (x *CloneRepoRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *CloneRepoRequest) GetSourceOrg() string {
	if x != nil {
		return x.SourceOrg
	}
	return ""
}

func (x *CloneRepoRequest) GetSourceRepo() string {
	if x != nil {
		return x.SourceRepo
	}
	return ""
}

func (x *CloneRepoRequest) GetSourceTag() string {
	if x != nil {
		return x.SourceTag
	}
	return ""
}

func (x *CloneRepoRequest) GetDestinationConnectionId() string {
	if x != nil {
		return x.DestinationConnectionId
	}
	return ""
}

func (x *CloneRepoRequest) GetDestinationOrg() string {
	if x != nil {
		return x.DestinationOrg
	}
	return ""
}

func (x *CloneRepoRequest) GetDestinationRepo() string {
	if x != nil {
		return x.DestinationRepo
	}
	return ""
}

func (x *CloneRepoRequest) GetDestinationTag() string {
	if x != nil {
		return x.DestinationTag
	}
	return ""
}

type CloneRepoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloneRepoResponse) Reset() {
	*x = CloneRepoResponse{}
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloneRepoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneRepoResponse) ProtoMessage() {}

func (x *CloneRepoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_registry_v1_registry_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneRepoResponse.ProtoReflect.Descriptor instead.
func (*CloneRepoResponse) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP(), []int{19}
}

var File_aserto_tenant_registry_v1_registry_proto protoreflect.FileDescriptor

const file_aserto_tenant_registry_v1_registry_proto_rawDesc = "" +
	"\n" +
	"(aserto/tenant/registry/v1/registry.proto\x12\x19aserto.tenant.registry.v1\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1baserto/options/v1/ids.proto\x1a\x1caserto/api/v1/registry.proto\x1a\x1easerto/api/v1/pagination.proto\x1a%aserto/api/v1/name_availability.proto\"\x8d\x01\n" +
	"\x18ListRegistryReposRequest\x12)\n" +
	"\rconnection_id\x18\x01 \x01(\tB\x04\x90\xb5\x18\aR\fconnectionId\x12\x10\n" +
	"\x03org\x18\x02 \x01(\tR\x03org\x124\n" +
	"\x04page\x18\x03 \x01(\v2 .aserto.api.v1.PaginationRequestR\x04page\"\x96\x01\n" +
	"\x19ListRegistryReposResponse\x12B\n" +
	"\x0eregistry_repos\x18\x01 \x03(\v2\x1b.aserto.api.v1.RegistryRepoR\rregistryRepos\x125\n" +
	"\x04page\x18\x02 \x01(\v2!.aserto.api.v1.PaginationResponseR\x04page\"\xc3\x01\n" +
	"\x1bListRegistryRepoTagsRequest\x12)\n" +
	"\rconnection_id\x18\x01 \x01(\tB\x04\x90\xb5\x18\aR\fconnectionId\x12/\n" +
	"\x04repo\x18\x02 \x01(\v2\x1b.aserto.api.v1.RegistryRepoR\x04repo\x124\n" +
	"\x04page\x18\x03 \x01(\v2 .aserto.api.v1.PaginationRequestR\x04page\x12\x12\n" +
	"\x04deep\x18\x04 \x01(\bR\x04deep\"\x89\x01\n" +
	"\x1cListRegistryRepoTagsResponse\x122\n" +
	"\x04tags\x18\x01 \x03(\v2\x1e.aserto.api.v1.RegistryRepoTagR\x04tags\x125\n" +
	"\x04page\x18\x02 \x01(\v2!.aserto.api.v1.PaginationResponseR\x04page\"\xc6\x01\n" +
	"\x1eListRegistryRepoDigestsRequest\x12)\n" +
	"\rconnection_id\x18\x01 \x01(\tB\x04\x90\xb5\x18\aR\fconnectionId\x12/\n" +
	"\x04repo\x18\x02 \x01(\v2\x1b.aserto.api.v1.RegistryRepoR\x04repo\x124\n" +
	"\x04page\x18\x03 \x01(\v2 .aserto.api.v1.PaginationRequestR\x04page\x12\x12\n" +
	"\x04deep\x18\x04 \x01(\bR\x04deep\"\x95\x01\n" +
	"\x1fListRegistryRepoDigestsResponse\x12;\n" +
	"\adigests\x18\x01 \x03(\v2!.aserto.api.v1.RegistryRepoDigestR\adigests\x125\n" +
	"\x04page\x18\x02 \x01(\v2!.aserto.api.v1.PaginationResponseR\x04page\"\x89\x01\n" +
	"\x19GetRegistryRepoTagRequest\x12)\n" +
	"\rconnection_id\x18\x01 \x01(\tB\x04\x90\xb5\x18\aR\fconnectionId\x12/\n" +
	"\x04repo\x18\x02 \x01(\v2\x1b.aserto.api.v1.RegistryRepoR\x04repo\x12\x10\n" +
	"\x03tag\x18\x03 \x01(\tR\x03tag\"N\n" +
	"\x1aGetRegistryRepoTagResponse\x120\n" +
	"\x03tag\x18\x01 \x01(\v2\x1e.aserto.api.v1.RegistryRepoTagR\x03tag\"w\n" +
	"\x19CreateRegistryRepoRequest\x12)\n" +
	"\rconnection_id\x18\x01 \x01(\tB\x04\x90\xb5\x18\aR\fconnectionId\x12/\n" +
	"\x04repo\x18\x02 \x01(\v2\x1b.aserto.api.v1.RegistryRepoR\x04repo\"\x1c\n" +
	"\x1aCreateRegistryRepoResponse\"\x89\x01\n" +
	"\x19DeleteRegistryRepoRequest\x12)\n" +
	"\rconnection_id\x18\x01 \x01(\tB\x04\x90\xb5\x18\aR\fconnectionId\x12/\n" +
	"\x04repo\x18\x02 \x01(\v2\x1b.aserto.api.v1.RegistryRepoR\x04repo\x12\x10\n" +
	"\x03tag\x18\x03 \x01(\tR\x03tag\"\x1c\n" +
	"\x1aDeleteRegistryRepoResponse\"r\n" +
	"\x0fListOrgsRequest\x12)\n" +
	"\rconnection_id\x18\x01 \x01(\tB\x04\x90\xb5\x18\aR\fconnectionId\x124\n" +
	"\x04page\x18\x02 \x01(\v2 .aserto.api.v1.PaginationRequestR\x04page\"]\n" +
	"\x10ListOrgsResponse\x12\x12\n" +
	"\x04orgs\x18\x01 \x03(\tR\x04orgs\x125\n" +
	"\x04page\x18\x02 \x01(\v2!.aserto.api.v1.PaginationResponseR\x04page\"z\n" +
	"\x1cRegistryRepoAvailableRequest\x12)\n" +
	"\rconnection_id\x18\x01 \x01(\tB\x04\x90\xb5\x18\aR\fconnectionId\x12/\n" +
	"\x04repo\x18\x02 \x01(\v2\x1b.aserto.api.v1.RegistryRepoR\x04repo\"|\n" +
	"\x1dRegistryRepoAvailableResponse\x12C\n" +
	"\favailability\x18\x01 \x01(\x0e2\x1f.aserto.api.v1.NameAvailabilityR\favailability\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\x91\x01\n" +
	"!ValidPolicyRegistryRepoTagRequest\x12)\n" +
	"\rconnection_id\x18\x01 \x01(\tB\x04\x90\xb5\x18\aR\fconnectionId\x12/\n" +
	"\x04repo\x18\x02 \x01(\v2\x1b.aserto.api.v1.RegistryRepoR\x04repo\x12\x10\n" +
	"\x03tag\x18\x03 \x01(\tR\x03tag\"$\n" +
	"\"ValidPolicyRegistryRepoTagResponse\"\xdb\x02\n" +
	"\x10CloneRepoRequest\x12)\n" +
	"\rconnection_id\x18\x01 \x01(\tB\x04\x90\xb5\x18\aR\fconnectionId\x12\x1d\n" +
	"\n" +
	"source_org\x18\x02 \x01(\tR\tsourceOrg\x12\x1f\n" +
	"\vsource_repo\x18\x03 \x01(\tR\n" +
	"sourceRepo\x12\x1d\n" +
	"\n" +
	"source_tag\x18\x04 \x01(\tR\tsourceTag\x12@\n" +
	"\x19destination_connection_id\x18\x05 \x01(\tB\x04\x90\xb5\x18\aR\x17destinationConnectionId\x12'\n" +
	"\x0fdestination_org\x18\x06 \x01(\tR\x0edestinationOrg\x12)\n" +
	"\x10destination_repo\x18\a \x01(\tR\x0fdestinationRepo\x12'\n" +
	"\x0fdestination_tag\x18\b \x01(\tR\x0edestinationTag\"\x13\n" +
	"\x11CloneRepoResponse2\xf4\x1a\n" +
	"\bRegistry\x12\x96\x02\n" +
	"\bListOrgs\x12*.aserto.tenant.registry.v1.ListOrgsRequest\x1a+.aserto.tenant.registry.v1.ListOrgsResponse\"\xb0\x01\x92A\x84\x01\n" +
	"\bregistry\x12\x16List all organizations\x1a3Lists all organizations available for a connection.*\x12registry.list_orgsb\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02\"\x12 /api/v1/registry/{connection_id}\x12\xe3\x02\n" +
	"\x11ListRegistryRepos\x123.aserto.tenant.registry.v1.ListRegistryReposRequest\x1a4.aserto.tenant.registry.v1.ListRegistryReposResponse\"\xe2\x01\x92A\xb0\x01\n" +
	"\bregistry\x12\x16List repos for an org.\x1aUReturns a list of RegistryRepo for a given registry connection and organization name.*\x1cregistry.list_registry_reposb\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02(\x12&/api/v1/registry/{connection_id}/{org}\x12\xd9\x02\n" +
	"\x12DeleteRegistryRepo\x124.aserto.tenant.registry.v1.DeleteRegistryRepoRequest\x1a5.aserto.tenant.registry.v1.DeleteRegistryRepoResponse\"\xd5\x01\x92A\x92\x01\n" +
	"\bregistry\x12\x14Delete a repository.\x1a8Deletes a repository, including all its tags and images.*\x1dregistry.delete_registry_repob\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x029*7/api/v1/registry/{connection_id}/{repo.org}/{repo.name}\x12\xd5\x02\n" +
	"\x14ListRegistryRepoTags\x126.aserto.tenant.registry.v1.ListRegistryRepoTagsRequest\x1a7.aserto.tenant.registry.v1.ListRegistryRepoTagsResponse\"\xcb\x01\x92A\x83\x01\n" +
	"\bregistry\x12\x15List repository tags.\x1a3Returns an array of tags for a registry repository.*\x12registry.list_tagsb\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02>\x12</api/v1/registry/{connection_id}/{repo.org}/{repo.name}/tags\x12\xea\x02\n" +
	"\x17ListRegistryRepoDigests\x129.aserto.tenant.registry.v1.ListRegistryRepoDigestsRequest\x1a:.aserto.tenant.registry.v1.ListRegistryRepoDigestsResponse\"\xd7\x01\x92A\x8c\x01\n" +
	"\bregistry\x12\x18List repository digests.\x1a6Returns an array of digests for a registry repository.*\x15registry.list_digestsb\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02A\x12?/api/v1/registry/{connection_id}/{repo.org}/{repo.name}/digests\x12\xda\x02\n" +
	"\x12GetRegistryRepoTag\x124.aserto.tenant.registry.v1.GetRegistryRepoTagRequest\x1a5.aserto.tenant.registry.v1.GetRegistryRepoTagResponse\"\xd6\x01\x92A\x88\x01\n" +
	"\bregistry\x12\x1bGet repository tag details.\x1a4Returns a tag object with information about the tag.*\x10registry.get_tagb\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02D\x12B/api/v1/registry/{connection_id}/{repo.org}/{repo.name}/tags/{tag}\x12\xdd\x02\n" +
	"\x12CreateRegistryRepo\x124.aserto.tenant.registry.v1.CreateRegistryRepoRequest\x1a5.aserto.tenant.registry.v1.CreateRegistryRepoResponse\"\xd9\x01\x92A\xaa\x01\n" +
	"\bregistry\x12\x17Create a registry repo.\x1aMCreate an empty registry repository for a given registry connection instance.*\x1dregistry.create_registry_repob\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02%:\x01*\" /api/v1/registry/{connection_id}\x12\xee\x02\n" +
	"\x15RegistryRepoAvailable\x127.aserto.tenant.registry.v1.RegistryRepoAvailableRequest\x1a8.aserto.tenant.registry.v1.RegistryRepoAvailableResponse\"\xe1\x01\x92A\x94\x01\n" +
	"\bregistry\x12\x1fRegistryRepo availability check\x1a,Verifies if given RegistryRepo is available.* registry.registry_repo_availableb\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02C\x12A/api/v1/registry/{connection_id}/available/{repo.org}/{repo.name}\x12\xf8\x02\n" +
	"\x1aValidPolicyRegistryRepoTag\x12<.aserto.tenant.registry.v1.ValidPolicyRegistryRepoTagRequest\x1a=.aserto.tenant.registry.v1.ValidPolicyRegistryRepoTagResponse\"\xdc\x01\x92A\x81\x01\n" +
	"\bregistry\x12\x12Tag validity check\x1a(Verifies if given tag is a valid policy.*\x1eregistry.registry_is_valid_tagb\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02Q\x12O/api/v1/registry/{connection_id}/{repo.org}/{repo.name}/tags/{tag}/valid_policy\x12\x9e\x02\n" +
	"\tCloneRepo\x12+.aserto.tenant.registry.v1.CloneRepoRequest\x1a,.aserto.tenant.registry.v1.CloneRepoResponse\"\xb5\x01\x92A\x80\x01\n" +
	"\bregistry\x12\x13Clones a repository\x1a1Clones a repository from one registry to another.*\x13registry.clone_repob\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02+:\x01*\"&/api/v1/registry/{connection_id}/cloneB\xc8\x01\x92A\x82\x01*\x01\x022\x10application/json:\x10application/jsonZ@\n" +
	"\x1a\n" +
	"\x03JWT\x12\x13\b\x02\x1a\rauthorization \x02\n" +
	"\"\n" +
	"\bTenantID\x12\x16\b\x02\x1a\x10aserto-tenant-id \x02b\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00Z@github.com/aserto-dev/go-grpc/aserto/tenant/registry/v1;registryb\x06proto3"

var (
	file_aserto_tenant_registry_v1_registry_proto_rawDescOnce sync.Once
	file_aserto_tenant_registry_v1_registry_proto_rawDescData []byte
)

func file_aserto_tenant_registry_v1_registry_proto_rawDescGZIP() []byte {
	file_aserto_tenant_registry_v1_registry_proto_rawDescOnce.Do(func() {
		file_aserto_tenant_registry_v1_registry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_aserto_tenant_registry_v1_registry_proto_rawDesc), len(file_aserto_tenant_registry_v1_registry_proto_rawDesc)))
	})
	return file_aserto_tenant_registry_v1_registry_proto_rawDescData
}

var file_aserto_tenant_registry_v1_registry_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_aserto_tenant_registry_v1_registry_proto_goTypes = []any{
	(*ListRegistryReposRequest)(nil),           // 0: aserto.tenant.registry.v1.ListRegistryReposRequest
	(*ListRegistryReposResponse)(nil),          // 1: aserto.tenant.registry.v1.ListRegistryReposResponse
	(*ListRegistryRepoTagsRequest)(nil),        // 2: aserto.tenant.registry.v1.ListRegistryRepoTagsRequest
	(*ListRegistryRepoTagsResponse)(nil),       // 3: aserto.tenant.registry.v1.ListRegistryRepoTagsResponse
	(*ListRegistryRepoDigestsRequest)(nil),     // 4: aserto.tenant.registry.v1.ListRegistryRepoDigestsRequest
	(*ListRegistryRepoDigestsResponse)(nil),    // 5: aserto.tenant.registry.v1.ListRegistryRepoDigestsResponse
	(*GetRegistryRepoTagRequest)(nil),          // 6: aserto.tenant.registry.v1.GetRegistryRepoTagRequest
	(*GetRegistryRepoTagResponse)(nil),         // 7: aserto.tenant.registry.v1.GetRegistryRepoTagResponse
	(*CreateRegistryRepoRequest)(nil),          // 8: aserto.tenant.registry.v1.CreateRegistryRepoRequest
	(*CreateRegistryRepoResponse)(nil),         // 9: aserto.tenant.registry.v1.CreateRegistryRepoResponse
	(*DeleteRegistryRepoRequest)(nil),          // 10: aserto.tenant.registry.v1.DeleteRegistryRepoRequest
	(*DeleteRegistryRepoResponse)(nil),         // 11: aserto.tenant.registry.v1.DeleteRegistryRepoResponse
	(*ListOrgsRequest)(nil),                    // 12: aserto.tenant.registry.v1.ListOrgsRequest
	(*ListOrgsResponse)(nil),                   // 13: aserto.tenant.registry.v1.ListOrgsResponse
	(*RegistryRepoAvailableRequest)(nil),       // 14: aserto.tenant.registry.v1.RegistryRepoAvailableRequest
	(*RegistryRepoAvailableResponse)(nil),      // 15: aserto.tenant.registry.v1.RegistryRepoAvailableResponse
	(*ValidPolicyRegistryRepoTagRequest)(nil),  // 16: aserto.tenant.registry.v1.ValidPolicyRegistryRepoTagRequest
	(*ValidPolicyRegistryRepoTagResponse)(nil), // 17: aserto.tenant.registry.v1.ValidPolicyRegistryRepoTagResponse
	(*CloneRepoRequest)(nil),                   // 18: aserto.tenant.registry.v1.CloneRepoRequest
	(*CloneRepoResponse)(nil),                  // 19: aserto.tenant.registry.v1.CloneRepoResponse
	(*v1.PaginationRequest)(nil),               // 20: aserto.api.v1.PaginationRequest
	(*v1.RegistryRepo)(nil),                    // 21: aserto.api.v1.RegistryRepo
	(*v1.PaginationResponse)(nil),              // 22: aserto.api.v1.PaginationResponse
	(*v1.RegistryRepoTag)(nil),                 // 23: aserto.api.v1.RegistryRepoTag
	(*v1.RegistryRepoDigest)(nil),              // 24: aserto.api.v1.RegistryRepoDigest
	(v1.NameAvailability)(0),                   // 25: aserto.api.v1.NameAvailability
}
var file_aserto_tenant_registry_v1_registry_proto_depIdxs = []int32{
	20, // 0: aserto.tenant.registry.v1.ListRegistryReposRequest.page:type_name -> aserto.api.v1.PaginationRequest
	21, // 1: aserto.tenant.registry.v1.ListRegistryReposResponse.registry_repos:type_name -> aserto.api.v1.RegistryRepo
	22, // 2: aserto.tenant.registry.v1.ListRegistryReposResponse.page:type_name -> aserto.api.v1.PaginationResponse
	21, // 3: aserto.tenant.registry.v1.ListRegistryRepoTagsRequest.repo:type_name -> aserto.api.v1.RegistryRepo
	20, // 4: aserto.tenant.registry.v1.ListRegistryRepoTagsRequest.page:type_name -> aserto.api.v1.PaginationRequest
	23, // 5: aserto.tenant.registry.v1.ListRegistryRepoTagsResponse.tags:type_name -> aserto.api.v1.RegistryRepoTag
	22, // 6: aserto.tenant.registry.v1.ListRegistryRepoTagsResponse.page:type_name -> aserto.api.v1.PaginationResponse
	21, // 7: aserto.tenant.registry.v1.ListRegistryRepoDigestsRequest.repo:type_name -> aserto.api.v1.RegistryRepo
	20, // 8: aserto.tenant.registry.v1.ListRegistryRepoDigestsRequest.page:type_name -> aserto.api.v1.PaginationRequest
	24, // 9: aserto.tenant.registry.v1.ListRegistryRepoDigestsResponse.digests:type_name -> aserto.api.v1.RegistryRepoDigest
	22, // 10: aserto.tenant.registry.v1.ListRegistryRepoDigestsResponse.page:type_name -> aserto.api.v1.PaginationResponse
	21, // 11: aserto.tenant.registry.v1.GetRegistryRepoTagRequest.repo:type_name -> aserto.api.v1.RegistryRepo
	23, // 12: aserto.tenant.registry.v1.GetRegistryRepoTagResponse.tag:type_name -> aserto.api.v1.RegistryRepoTag
	21, // 13: aserto.tenant.registry.v1.CreateRegistryRepoRequest.repo:type_name -> aserto.api.v1.RegistryRepo
	21, // 14: aserto.tenant.registry.v1.DeleteRegistryRepoRequest.repo:type_name -> aserto.api.v1.RegistryRepo
	20, // 15: aserto.tenant.registry.v1.ListOrgsRequest.page:type_name -> aserto.api.v1.PaginationRequest
	22, // 16: aserto.tenant.registry.v1.ListOrgsResponse.page:type_name -> aserto.api.v1.PaginationResponse
	21, // 17: aserto.tenant.registry.v1.RegistryRepoAvailableRequest.repo:type_name -> aserto.api.v1.RegistryRepo
	25, // 18: aserto.tenant.registry.v1.RegistryRepoAvailableResponse.availability:type_name -> aserto.api.v1.NameAvailability
	21, // 19: aserto.tenant.registry.v1.ValidPolicyRegistryRepoTagRequest.repo:type_name -> aserto.api.v1.RegistryRepo
	12, // 20: aserto.tenant.registry.v1.Registry.ListOrgs:input_type -> aserto.tenant.registry.v1.ListOrgsRequest
	0,  // 21: aserto.tenant.registry.v1.Registry.ListRegistryRepos:input_type -> aserto.tenant.registry.v1.ListRegistryReposRequest
	10, // 22: aserto.tenant.registry.v1.Registry.DeleteRegistryRepo:input_type -> aserto.tenant.registry.v1.DeleteRegistryRepoRequest
	2,  // 23: aserto.tenant.registry.v1.Registry.ListRegistryRepoTags:input_type -> aserto.tenant.registry.v1.ListRegistryRepoTagsRequest
	4,  // 24: aserto.tenant.registry.v1.Registry.ListRegistryRepoDigests:input_type -> aserto.tenant.registry.v1.ListRegistryRepoDigestsRequest
	6,  // 25: aserto.tenant.registry.v1.Registry.GetRegistryRepoTag:input_type -> aserto.tenant.registry.v1.GetRegistryRepoTagRequest
	8,  // 26: aserto.tenant.registry.v1.Registry.CreateRegistryRepo:input_type -> aserto.tenant.registry.v1.CreateRegistryRepoRequest
	14, // 27: aserto.tenant.registry.v1.Registry.RegistryRepoAvailable:input_type -> aserto.tenant.registry.v1.RegistryRepoAvailableRequest
	16, // 28: aserto.tenant.registry.v1.Registry.ValidPolicyRegistryRepoTag:input_type -> aserto.tenant.registry.v1.ValidPolicyRegistryRepoTagRequest
	18, // 29: aserto.tenant.registry.v1.Registry.CloneRepo:input_type -> aserto.tenant.registry.v1.CloneRepoRequest
	13, // 30: aserto.tenant.registry.v1.Registry.ListOrgs:output_type -> aserto.tenant.registry.v1.ListOrgsResponse
	1,  // 31: aserto.tenant.registry.v1.Registry.ListRegistryRepos:output_type -> aserto.tenant.registry.v1.ListRegistryReposResponse
	11, // 32: aserto.tenant.registry.v1.Registry.DeleteRegistryRepo:output_type -> aserto.tenant.registry.v1.DeleteRegistryRepoResponse
	3,  // 33: aserto.tenant.registry.v1.Registry.ListRegistryRepoTags:output_type -> aserto.tenant.registry.v1.ListRegistryRepoTagsResponse
	5,  // 34: aserto.tenant.registry.v1.Registry.ListRegistryRepoDigests:output_type -> aserto.tenant.registry.v1.ListRegistryRepoDigestsResponse
	7,  // 35: aserto.tenant.registry.v1.Registry.GetRegistryRepoTag:output_type -> aserto.tenant.registry.v1.GetRegistryRepoTagResponse
	9,  // 36: aserto.tenant.registry.v1.Registry.CreateRegistryRepo:output_type -> aserto.tenant.registry.v1.CreateRegistryRepoResponse
	15, // 37: aserto.tenant.registry.v1.Registry.RegistryRepoAvailable:output_type -> aserto.tenant.registry.v1.RegistryRepoAvailableResponse
	17, // 38: aserto.tenant.registry.v1.Registry.ValidPolicyRegistryRepoTag:output_type -> aserto.tenant.registry.v1.ValidPolicyRegistryRepoTagResponse
	19, // 39: aserto.tenant.registry.v1.Registry.CloneRepo:output_type -> aserto.tenant.registry.v1.CloneRepoResponse
	30, // [30:40] is the sub-list for method output_type
	20, // [20:30] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_aserto_tenant_registry_v1_registry_proto_init() }
func file_aserto_tenant_registry_v1_registry_proto_init() {
	if File_aserto_tenant_registry_v1_registry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_aserto_tenant_registry_v1_registry_proto_rawDesc), len(file_aserto_tenant_registry_v1_registry_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aserto_tenant_registry_v1_registry_proto_goTypes,
		DependencyIndexes: file_aserto_tenant_registry_v1_registry_proto_depIdxs,
		MessageInfos:      file_aserto_tenant_registry_v1_registry_proto_msgTypes,
	}.Build()
	File_aserto_tenant_registry_v1_registry_proto = out.File
	file_aserto_tenant_registry_v1_registry_proto_goTypes = nil
	file_aserto_tenant_registry_v1_registry_proto_depIdxs = nil
}
