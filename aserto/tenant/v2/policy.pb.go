// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: aserto/tenant/v2/policy.proto

package tenant

import (
	v1 "github.com/aserto-dev/go-grpc/aserto/api/v1"
	v2 "github.com/aserto-dev/go-grpc/aserto/api/v2"
	_ "github.com/aserto-dev/go-grpc/aserto/options/v1"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreatePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Policy        *v2.Policy             `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePolicyRequest) Reset() {
	*x = CreatePolicyRequest{}
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePolicyRequest) ProtoMessage() {}

func (x *CreatePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePolicyRequest.ProtoReflect.Descriptor instead.
func (*CreatePolicyRequest) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_v2_policy_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePolicyRequest) GetPolicy() *v2.Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type CreatePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Policy        *v2.Policy             `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePolicyResponse) Reset() {
	*x = CreatePolicyResponse{}
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePolicyResponse) ProtoMessage() {}

func (x *CreatePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePolicyResponse.ProtoReflect.Descriptor instead.
func (*CreatePolicyResponse) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_v2_policy_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePolicyResponse) GetPolicy() *v2.Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type ListPolicyFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Filter:
	//
	//	*ListPolicyFilter_NameStartsWith
	//	*ListPolicyFilter_NameEquals
	Filter        isListPolicyFilter_Filter `protobuf_oneof:"filter"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPolicyFilter) Reset() {
	*x = ListPolicyFilter{}
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPolicyFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPolicyFilter) ProtoMessage() {}

func (x *ListPolicyFilter) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPolicyFilter.ProtoReflect.Descriptor instead.
func (*ListPolicyFilter) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_v2_policy_proto_rawDescGZIP(), []int{2}
}

func (x *ListPolicyFilter) GetFilter() isListPolicyFilter_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListPolicyFilter) GetNameStartsWith() string {
	if x != nil {
		if x, ok := x.Filter.(*ListPolicyFilter_NameStartsWith); ok {
			return x.NameStartsWith
		}
	}
	return ""
}

func (x *ListPolicyFilter) GetNameEquals() string {
	if x != nil {
		if x, ok := x.Filter.(*ListPolicyFilter_NameEquals); ok {
			return x.NameEquals
		}
	}
	return ""
}

type isListPolicyFilter_Filter interface {
	isListPolicyFilter_Filter()
}

type ListPolicyFilter_NameStartsWith struct {
	NameStartsWith string `protobuf:"bytes,1,opt,name=name_starts_with,json=nameStartsWith,proto3,oneof"`
}

type ListPolicyFilter_NameEquals struct {
	NameEquals string `protobuf:"bytes,2,opt,name=name_equals,json=nameEquals,proto3,oneof"`
}

func (*ListPolicyFilter_NameStartsWith) isListPolicyFilter_Filter() {}

func (*ListPolicyFilter_NameEquals) isListPolicyFilter_Filter() {}

type ListPolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          *v1.PaginationRequest  `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Filter        *ListPolicyFilter      `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPolicyRequest) Reset() {
	*x = ListPolicyRequest{}
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPolicyRequest) ProtoMessage() {}

func (x *ListPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPolicyRequest.ProtoReflect.Descriptor instead.
func (*ListPolicyRequest) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_v2_policy_proto_rawDescGZIP(), []int{3}
}

func (x *ListPolicyRequest) GetPage() *v1.PaginationRequest {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListPolicyRequest) GetFilter() *ListPolicyFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListPolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*v2.Policy           `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Page          *v1.PaginationResponse `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPolicyResponse) Reset() {
	*x = ListPolicyResponse{}
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPolicyResponse) ProtoMessage() {}

func (x *ListPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPolicyResponse.ProtoReflect.Descriptor instead.
func (*ListPolicyResponse) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_v2_policy_proto_rawDescGZIP(), []int{4}
}

func (x *ListPolicyResponse) GetResults() []*v2.Policy {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ListPolicyResponse) GetPage() *v1.PaginationResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type DeletePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePolicyRequest) Reset() {
	*x = DeletePolicyRequest{}
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePolicyRequest) ProtoMessage() {}

func (x *DeletePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePolicyRequest.ProtoReflect.Descriptor instead.
func (*DeletePolicyRequest) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_v2_policy_proto_rawDescGZIP(), []int{5}
}

func (x *DeletePolicyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeletePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePolicyResponse) Reset() {
	*x = DeletePolicyResponse{}
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePolicyResponse) ProtoMessage() {}

func (x *DeletePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePolicyResponse.ProtoReflect.Descriptor instead.
func (*DeletePolicyResponse) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_v2_policy_proto_rawDescGZIP(), []int{6}
}

type UpdatePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Policy        *v2.Policy             `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	Fields        *v1.Fields             `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePolicyRequest) Reset() {
	*x = UpdatePolicyRequest{}
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePolicyRequest) ProtoMessage() {}

func (x *UpdatePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePolicyRequest.ProtoReflect.Descriptor instead.
func (*UpdatePolicyRequest) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_v2_policy_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePolicyRequest) GetPolicy() *v2.Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *UpdatePolicyRequest) GetFields() *v1.Fields {
	if x != nil {
		return x.Fields
	}
	return nil
}

type UpdatePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Policy        *v2.Policy             `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePolicyResponse) Reset() {
	*x = UpdatePolicyResponse{}
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePolicyResponse) ProtoMessage() {}

func (x *UpdatePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePolicyResponse.ProtoReflect.Descriptor instead.
func (*UpdatePolicyResponse) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_v2_policy_proto_rawDescGZIP(), []int{8}
}

func (x *UpdatePolicyResponse) GetPolicy() *v2.Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type GetPolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPolicyRequest) Reset() {
	*x = GetPolicyRequest{}
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyRequest) ProtoMessage() {}

func (x *GetPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetPolicyRequest) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_v2_policy_proto_rawDescGZIP(), []int{9}
}

func (x *GetPolicyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Policy        *v2.Policy             `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPolicyResponse) Reset() {
	*x = GetPolicyResponse{}
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyResponse) ProtoMessage() {}

func (x *GetPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetPolicyResponse) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_v2_policy_proto_rawDescGZIP(), []int{10}
}

func (x *GetPolicyResponse) GetPolicy() *v2.Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type PolicyNameAvailableRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolicyNameAvailableRequest) Reset() {
	*x = PolicyNameAvailableRequest{}
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyNameAvailableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyNameAvailableRequest) ProtoMessage() {}

func (x *PolicyNameAvailableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyNameAvailableRequest.ProtoReflect.Descriptor instead.
func (*PolicyNameAvailableRequest) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_v2_policy_proto_rawDescGZIP(), []int{11}
}

func (x *PolicyNameAvailableRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PolicyNameAvailableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Availability  v1.NameAvailability    `protobuf:"varint,1,opt,name=availability,proto3,enum=aserto.api.v1.NameAvailability" json:"availability,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PolicyNameAvailableResponse) Reset() {
	*x = PolicyNameAvailableResponse{}
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PolicyNameAvailableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyNameAvailableResponse) ProtoMessage() {}

func (x *PolicyNameAvailableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aserto_tenant_v2_policy_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyNameAvailableResponse.ProtoReflect.Descriptor instead.
func (*PolicyNameAvailableResponse) Descriptor() ([]byte, []int) {
	return file_aserto_tenant_v2_policy_proto_rawDescGZIP(), []int{12}
}

func (x *PolicyNameAvailableResponse) GetAvailability() v1.NameAvailability {
	if x != nil {
		return x.Availability
	}
	return v1.NameAvailability(0)
}

func (x *PolicyNameAvailableResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_aserto_tenant_v2_policy_proto protoreflect.FileDescriptor

const file_aserto_tenant_v2_policy_proto_rawDesc = "" +
	"\n" +
	"\x1daserto/tenant/v2/policy.proto\x12\x10aserto.tenant.v2\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1aaserto/api/v1/fields.proto\x1a\x1aaserto/api/v2/policy.proto\x1a\x1baserto/options/v1/ids.proto\x1a\x1easerto/api/v1/pagination.proto\x1a%aserto/api/v1/name_availability.proto\"D\n" +
	"\x13CreatePolicyRequest\x12-\n" +
	"\x06policy\x18\x01 \x01(\v2\x15.aserto.api.v2.PolicyR\x06policy\"E\n" +
	"\x14CreatePolicyResponse\x12-\n" +
	"\x06policy\x18\x01 \x01(\v2\x15.aserto.api.v2.PolicyR\x06policy\"k\n" +
	"\x10ListPolicyFilter\x12*\n" +
	"\x10name_starts_with\x18\x01 \x01(\tH\x00R\x0enameStartsWith\x12!\n" +
	"\vname_equals\x18\x02 \x01(\tH\x00R\n" +
	"nameEqualsB\b\n" +
	"\x06filter\"\x85\x01\n" +
	"\x11ListPolicyRequest\x124\n" +
	"\x04page\x18\x01 \x01(\v2 .aserto.api.v1.PaginationRequestR\x04page\x12:\n" +
	"\x06filter\x18\x02 \x01(\v2\".aserto.tenant.v2.ListPolicyFilterR\x06filter\"|\n" +
	"\x12ListPolicyResponse\x12/\n" +
	"\aresults\x18\x01 \x03(\v2\x15.aserto.api.v2.PolicyR\aresults\x125\n" +
	"\x04page\x18\x02 \x01(\v2!.aserto.api.v1.PaginationResponseR\x04page\"+\n" +
	"\x13DeletePolicyRequest\x12\x14\n" +
	"\x02id\x18\x01 \x01(\tB\x04\x90\xb5\x18\x04R\x02id\"\x16\n" +
	"\x14DeletePolicyResponse\"s\n" +
	"\x13UpdatePolicyRequest\x12-\n" +
	"\x06policy\x18\x01 \x01(\v2\x15.aserto.api.v2.PolicyR\x06policy\x12-\n" +
	"\x06fields\x18\x02 \x01(\v2\x15.aserto.api.v1.FieldsR\x06fields\"E\n" +
	"\x14UpdatePolicyResponse\x12-\n" +
	"\x06policy\x18\x01 \x01(\v2\x15.aserto.api.v2.PolicyR\x06policy\"(\n" +
	"\x10GetPolicyRequest\x12\x14\n" +
	"\x02id\x18\x01 \x01(\tB\x04\x90\xb5\x18\x04R\x02id\"B\n" +
	"\x11GetPolicyResponse\x12-\n" +
	"\x06policy\x18\x01 \x01(\v2\x15.aserto.api.v2.PolicyR\x06policy\"0\n" +
	"\x1aPolicyNameAvailableRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"z\n" +
	"\x1bPolicyNameAvailableResponse\x12C\n" +
	"\favailability\x18\x01 \x01(\x0e2\x1f.aserto.api.v1.NameAvailabilityR\favailability\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason2\xf5\n" +
	"\n" +
	"\x06Policy\x12\xc7\x01\n" +
	"\n" +
	"ListPolicy\x12#.aserto.tenant.v2.ListPolicyRequest\x1a$.aserto.tenant.v2.ListPolicyResponse\"n\x92AS\n" +
	"\x06policy\x12\fList polices\x1a\x0eList policies.*\x12policy.list_policyb\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02\x12\x12\x10/api/v2/policies\x12\xdd\x01\n" +
	"\fCreatePolicy\x12%.aserto.tenant.v2.CreatePolicyRequest\x1a&.aserto.tenant.v2.CreatePolicyResponse\"~\x92A[\n" +
	"\x06policy\x12\x10Create a policy.\x1a\x10Create a policy.*\x14policy.create_policyb\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02\x1a:\x06policy\"\x10/api/v2/policies\x12\xd6\x01\n" +
	"\fDeletePolicy\x12%.aserto.tenant.v2.DeletePolicyRequest\x1a&.aserto.tenant.v2.DeletePolicyResponse\"w\x92AW\n" +
	"\x06policy\x12\x0eRemove policy.\x1a\x0eRemove policy.*\x14policy.delete_policyb\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02\x17*\x15/api/v2/policies/{id}\x12\xea\x01\n" +
	"\fUpdatePolicy\x12%.aserto.tenant.v2.UpdatePolicyRequest\x1a&.aserto.tenant.v2.UpdatePolicyResponse\"\x8a\x01\x92A[\n" +
	"\x06policy\x12\x10Update a policy.\x1a\x10Update a policy.*\x14policy.update_policyb\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02&:\x06policy2\x1c/api/v2/policies/{policy.id}\x12\xd3\x01\n" +
	"\tGetPolicy\x12\".aserto.tenant.v2.GetPolicyRequest\x1a#.aserto.tenant.v2.GetPolicyResponse\"}\x92A]\n" +
	"\x06policy\x12\x10Get policy by ID\x1a\x15Get policy by its ID.*\x11policy.get_policyb\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v2/policies/{id}\x12\xa4\x02\n" +
	"\x13PolicyNameAvailable\x12,.aserto.tenant.v2.PolicyNameAvailableRequest\x1a-.aserto.tenant.v2.PolicyNameAvailableResponse\"\xaf\x01\x92A\x82\x01\n" +
	"\x06policy\x12\x19Policy availability check\x1a+Verifies if given policy name is available.*\x17policy.policy_availableb\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00\x82\xd3\xe4\x93\x02#\x12!/api/v2/policies/available/{name}B\xbd\x01\x92A\x82\x01*\x01\x022\x10application/json:\x10application/jsonZ@\n" +
	"\x1a\n" +
	"\x03JWT\x12\x13\b\x02\x1a\rauthorization \x02\n" +
	"\"\n" +
	"\bTenantID\x12\x16\b\x02\x1a\x10aserto-tenant-id \x02b\x17\n" +
	"\a\n" +
	"\x03JWT\x12\x00\n" +
	"\f\n" +
	"\bTenantID\x12\x00Z5github.com/aserto-dev/go-grpc/aserto/tenant/v2;tenantb\x06proto3"

var (
	file_aserto_tenant_v2_policy_proto_rawDescOnce sync.Once
	file_aserto_tenant_v2_policy_proto_rawDescData []byte
)

func file_aserto_tenant_v2_policy_proto_rawDescGZIP() []byte {
	file_aserto_tenant_v2_policy_proto_rawDescOnce.Do(func() {
		file_aserto_tenant_v2_policy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_aserto_tenant_v2_policy_proto_rawDesc), len(file_aserto_tenant_v2_policy_proto_rawDesc)))
	})
	return file_aserto_tenant_v2_policy_proto_rawDescData
}

var file_aserto_tenant_v2_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_aserto_tenant_v2_policy_proto_goTypes = []any{
	(*CreatePolicyRequest)(nil),         // 0: aserto.tenant.v2.CreatePolicyRequest
	(*CreatePolicyResponse)(nil),        // 1: aserto.tenant.v2.CreatePolicyResponse
	(*ListPolicyFilter)(nil),            // 2: aserto.tenant.v2.ListPolicyFilter
	(*ListPolicyRequest)(nil),           // 3: aserto.tenant.v2.ListPolicyRequest
	(*ListPolicyResponse)(nil),          // 4: aserto.tenant.v2.ListPolicyResponse
	(*DeletePolicyRequest)(nil),         // 5: aserto.tenant.v2.DeletePolicyRequest
	(*DeletePolicyResponse)(nil),        // 6: aserto.tenant.v2.DeletePolicyResponse
	(*UpdatePolicyRequest)(nil),         // 7: aserto.tenant.v2.UpdatePolicyRequest
	(*UpdatePolicyResponse)(nil),        // 8: aserto.tenant.v2.UpdatePolicyResponse
	(*GetPolicyRequest)(nil),            // 9: aserto.tenant.v2.GetPolicyRequest
	(*GetPolicyResponse)(nil),           // 10: aserto.tenant.v2.GetPolicyResponse
	(*PolicyNameAvailableRequest)(nil),  // 11: aserto.tenant.v2.PolicyNameAvailableRequest
	(*PolicyNameAvailableResponse)(nil), // 12: aserto.tenant.v2.PolicyNameAvailableResponse
	(*v2.Policy)(nil),                   // 13: aserto.api.v2.Policy
	(*v1.PaginationRequest)(nil),        // 14: aserto.api.v1.PaginationRequest
	(*v1.PaginationResponse)(nil),       // 15: aserto.api.v1.PaginationResponse
	(*v1.Fields)(nil),                   // 16: aserto.api.v1.Fields
	(v1.NameAvailability)(0),            // 17: aserto.api.v1.NameAvailability
}
var file_aserto_tenant_v2_policy_proto_depIdxs = []int32{
	13, // 0: aserto.tenant.v2.CreatePolicyRequest.policy:type_name -> aserto.api.v2.Policy
	13, // 1: aserto.tenant.v2.CreatePolicyResponse.policy:type_name -> aserto.api.v2.Policy
	14, // 2: aserto.tenant.v2.ListPolicyRequest.page:type_name -> aserto.api.v1.PaginationRequest
	2,  // 3: aserto.tenant.v2.ListPolicyRequest.filter:type_name -> aserto.tenant.v2.ListPolicyFilter
	13, // 4: aserto.tenant.v2.ListPolicyResponse.results:type_name -> aserto.api.v2.Policy
	15, // 5: aserto.tenant.v2.ListPolicyResponse.page:type_name -> aserto.api.v1.PaginationResponse
	13, // 6: aserto.tenant.v2.UpdatePolicyRequest.policy:type_name -> aserto.api.v2.Policy
	16, // 7: aserto.tenant.v2.UpdatePolicyRequest.fields:type_name -> aserto.api.v1.Fields
	13, // 8: aserto.tenant.v2.UpdatePolicyResponse.policy:type_name -> aserto.api.v2.Policy
	13, // 9: aserto.tenant.v2.GetPolicyResponse.policy:type_name -> aserto.api.v2.Policy
	17, // 10: aserto.tenant.v2.PolicyNameAvailableResponse.availability:type_name -> aserto.api.v1.NameAvailability
	3,  // 11: aserto.tenant.v2.Policy.ListPolicy:input_type -> aserto.tenant.v2.ListPolicyRequest
	0,  // 12: aserto.tenant.v2.Policy.CreatePolicy:input_type -> aserto.tenant.v2.CreatePolicyRequest
	5,  // 13: aserto.tenant.v2.Policy.DeletePolicy:input_type -> aserto.tenant.v2.DeletePolicyRequest
	7,  // 14: aserto.tenant.v2.Policy.UpdatePolicy:input_type -> aserto.tenant.v2.UpdatePolicyRequest
	9,  // 15: aserto.tenant.v2.Policy.GetPolicy:input_type -> aserto.tenant.v2.GetPolicyRequest
	11, // 16: aserto.tenant.v2.Policy.PolicyNameAvailable:input_type -> aserto.tenant.v2.PolicyNameAvailableRequest
	4,  // 17: aserto.tenant.v2.Policy.ListPolicy:output_type -> aserto.tenant.v2.ListPolicyResponse
	1,  // 18: aserto.tenant.v2.Policy.CreatePolicy:output_type -> aserto.tenant.v2.CreatePolicyResponse
	6,  // 19: aserto.tenant.v2.Policy.DeletePolicy:output_type -> aserto.tenant.v2.DeletePolicyResponse
	8,  // 20: aserto.tenant.v2.Policy.UpdatePolicy:output_type -> aserto.tenant.v2.UpdatePolicyResponse
	10, // 21: aserto.tenant.v2.Policy.GetPolicy:output_type -> aserto.tenant.v2.GetPolicyResponse
	12, // 22: aserto.tenant.v2.Policy.PolicyNameAvailable:output_type -> aserto.tenant.v2.PolicyNameAvailableResponse
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_aserto_tenant_v2_policy_proto_init() }
func file_aserto_tenant_v2_policy_proto_init() {
	if File_aserto_tenant_v2_policy_proto != nil {
		return
	}
	file_aserto_tenant_v2_policy_proto_msgTypes[2].OneofWrappers = []any{
		(*ListPolicyFilter_NameStartsWith)(nil),
		(*ListPolicyFilter_NameEquals)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_aserto_tenant_v2_policy_proto_rawDesc), len(file_aserto_tenant_v2_policy_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aserto_tenant_v2_policy_proto_goTypes,
		DependencyIndexes: file_aserto_tenant_v2_policy_proto_depIdxs,
		MessageInfos:      file_aserto_tenant_v2_policy_proto_msgTypes,
	}.Build()
	File_aserto_tenant_v2_policy_proto = out.File
	file_aserto_tenant_v2_policy_proto_goTypes = nil
	file_aserto_tenant_v2_policy_proto_depIdxs = nil
}
